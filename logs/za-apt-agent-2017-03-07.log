2017-03-07 09:47:44,241 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 09:47:44,250 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 09:47:44,250 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 09:47:44,251 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 09:47:44,251 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 09:47:44,254 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 09:47:44,256 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 09:47:44,258 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 09:47:44,259 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 09:47:44,261 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 09:47:44,262 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 09:47:44,264 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "4187596286","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "510703199203072206","insurantCertiType": "I", "insurantName": "投保人张小春","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "330108199703078001","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15006248938"}}
2017-03-07 09:47:44,265 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"4187596286\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"510703199203072206\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张小春\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"330108199703078001\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15006248938\"}}"}
2017-03-07 09:47:44,763 [pool-14-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030481\",\"insuredId\":\"4187596286\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 09:47:44,766 [pool-14-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 09:47:44,769 [pool-14-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 09:47:44,770 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 09:47:44,774 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 09:47:44,778 [pool-14-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030481==27030481
2017-03-07 09:47:44,779 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 09:47:44,779 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 09:47:44,779 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 09:47:44,780 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 09:47:44,781 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 09:47:44,781 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 09:47:44,782 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 09:47:44,784 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 09:47:44,787 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 09:47:44,788 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 09:47:44,789 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 09:47:44,791 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 09:47:44,792 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "7546574964","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "211081199203073867","insurantCertiType": "I", "insurantName": "投保人张星瑶","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "15252619970307808X","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15004017710"}}
2017-03-07 09:47:44,792 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"7546574964\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"211081199203073867\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张星瑶\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"15252619970307808X\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15004017710\"}}"}
2017-03-07 09:47:45,297 [pool-14-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030482\",\"insuredId\":\"7546574964\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 09:47:45,300 [pool-14-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 09:47:45,301 [pool-14-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 09:47:45,301 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 09:47:45,303 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 09:47:45,304 [pool-14-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030482==27030482
2017-03-07 09:47:45,305 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 09:47:50,480 [pool-14-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 09:47:50,481 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 09:47:50,481 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 09:47:50,481 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 09:47:50,481 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 09:47:50,481 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 09:47:50,482 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 09:47:50,483 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 09:47:50,484 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 09:47:50,485 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 09:47:50,489 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 09:47:50,491 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "7546478792","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "450400199203070284","insurantCertiType": "I", "insurantName": "投保人王清嘉","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "431381199703072665","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13408181153"}}
2017-03-07 09:47:50,491 [pool-14-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"7546478792\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"450400199203070284\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王清嘉\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"431381199703072665\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13408181153\"}}"}
2017-03-07 09:47:51,056 [pool-14-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030483\",\"insuredId\":\"7546478792\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 09:47:51,058 [pool-14-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 09:47:51,059 [pool-14-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 09:47:51,060 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 09:47:51,062 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 09:47:51,064 [pool-14-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030483==27030483
2017-03-07 09:47:51,064 [pool-14-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 09:47:51,064 [pool-14-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 09:47:51,064 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 09:47:51,065 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 09:47:51,065 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 09:47:51,065 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 09:47:51,065 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 09:47:51,066 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 09:47:51,067 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 09:47:51,068 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 09:47:51,069 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 09:47:51,070 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 09:47:51,071 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "8682756242","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "420502199203076689","insurantCertiType": "I", "insurantName": "投保人张贞婉","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "445381199703072847","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13502751880"}}
2017-03-07 09:47:51,071 [pool-14-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"8682756242\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"420502199203076689\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张贞婉\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"445381199703072847\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13502751880\"}}"}
2017-03-07 09:47:51,465 [pool-14-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030484\",\"insuredId\":\"8682756242\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 09:47:51,468 [pool-14-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 09:47:51,472 [pool-14-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 09:47:51,472 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 09:47:51,474 [pool-14-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 09:47:51,476 [pool-14-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030484==27030484
2017-03-07 09:47:51,476 [pool-14-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 09:53:48,352 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 22120 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 09:53:48,360 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 09:53:48,495 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Tue Mar 07 09:53:48 CST 2017]; root of context hierarchy
2017-03-07 09:53:48,804 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 09:53:50,964 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9e3a0d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 09:53:52,486 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 09:53:52,517 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 09:53:52,521 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 09:53:52,889 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 09:53:52,890 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4395 ms
2017-03-07 09:53:53,197 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 09:53:53,209 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 09:53:53,209 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 09:53:53,210 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 09:53:53,210 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 09:53:53,384 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 09:54:11,818 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Tue Mar 07 09:53:48 CST 2017]; root of context hierarchy
2017-03-07 09:54:11,968 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 09:54:11,971 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 09:54:11,973 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 09:54:11,973 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 09:54:11,974 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 09:54:11,974 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 09:54:11,985 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 09:54:11,985 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 09:54:11,986 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 09:54:11,986 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 09:54:11,987 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 09:54:11,989 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 09:54:11,990 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 09:54:11,994 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 09:54:11,995 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 09:54:12,037 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 09:54:12,038 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 09:54:12,038 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 09:54:12,038 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 09:54:12,059 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 09:54:12,059 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 09:54:12,145 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 09:54:12,869 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 09:54:12,892 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 09:54:12,920 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 09:54:12,947 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 09:54:12,990 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 09:54:13,043 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 09:54:13,055 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 25.28 seconds (JVM running for 26.449)
2017-03-07 09:54:20,440 [http-nio-9090-exec-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 09:54:20,441 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 09:54:20,476 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2017-03-07 09:57:36,826 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 09:57:36,851 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 09:57:37,019 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 09:57:37,023 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 09:57:37,024 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 09:57:37,025 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 09:57:37,075 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 09:57:37,078 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 09:57:37,097 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 09:57:37,251 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 09:57:37,255 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 09:57:37,258 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6564715361","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "411426199203072084","insurantCertiType": "I", "insurantName": "投保人闽灵卉","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "510922199703076545","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13204545891"}}
2017-03-07 09:57:37,345 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6564715361\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"411426199203072084\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人闽灵卉\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"510922199703076545\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13204545891\"}}"}
2017-03-07 09:57:38,377 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030595\",\"insuredId\":\"6564715361\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 09:57:38,408 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 09:57:38,411 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 09:57:38,411 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 09:57:38,414 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 09:57:38,417 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030595==27030595
2017-03-07 09:57:38,442 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 09:57:38,442 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 09:57:38,443 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 09:57:38,443 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 09:57:38,444 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 09:57:38,445 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 09:57:38,446 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 09:57:38,447 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 09:57:38,449 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 09:57:38,451 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 09:57:38,452 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 09:57:38,463 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 09:57:38,465 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6895913964","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "230700199203077465","insurantCertiType": "I", "insurantName": "投保人张觅山","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "130530199703070546","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15704788165"}}
2017-03-07 09:57:38,467 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6895913964\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"230700199203077465\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张觅山\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"130530199703070546\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15704788165\"}}"}
2017-03-07 09:57:38,880 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030596\",\"insuredId\":\"6895913964\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 09:57:38,882 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 09:57:38,884 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 09:57:38,884 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 09:57:38,889 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 09:57:38,890 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030596==27030596
2017-03-07 09:57:38,891 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:05:05,982 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:05:05,983 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:05:05,984 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:05:05,985 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:05:05,985 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:05:05,985 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:05:05,986 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:05:05,987 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:05:05,990 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:05:05,991 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:05:05,997 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:05:05,998 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "7262134614","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "15062319920307284X","insurantCertiType": "I", "insurantName": "投保人王忆彤","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "450702199703070642","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15308751561"}}
2017-03-07 10:05:05,998 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"7262134614\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"15062319920307284X\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王忆彤\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"450702199703070642\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15308751561\"}}"}
2017-03-07 10:05:06,581 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030608\",\"insuredId\":\"7262134614\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:05:06,584 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:05:06,587 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:05:06,587 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:05:06,590 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:05:06,592 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030608==27030608
2017-03-07 10:05:06,593 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:05:06,593 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:05:06,593 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:05:06,605 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:05:06,606 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:05:06,606 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:05:06,607 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:05:06,609 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:05:06,611 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:05:06,612 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:05:06,613 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:05:06,614 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:05:06,616 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "9682291225","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "43040619920307102X","insurantCertiType": "I", "insurantName": "投保人王兴平","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "440883199703070820","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13306968173"}}
2017-03-07 10:05:06,616 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"9682291225\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"43040619920307102X\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王兴平\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"440883199703070820\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13306968173\"}}"}
2017-03-07 10:05:07,129 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030609\",\"insuredId\":\"9682291225\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:05:07,132 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:05:07,137 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:05:07,138 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:05:07,146 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:05:07,150 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030609==27030609
2017-03-07 10:05:07,151 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:15:41,233 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:15:41,233 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:15:41,234 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:15:41,235 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:15:41,237 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:15:41,239 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:15:41,240 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:15:41,242 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3436846416",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "433101199203079229",
      "insurantCertiType": "I",
      "insurantName": "投保人王晴岚",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "23050219970307588X",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:15:41,243 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"3436846416\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"433101199203079229\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王晴岚\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"23050219970307588X\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:15:41,749 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030630\",\"insuredId\":\"3436846416\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:15:41,753 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:15:41,755 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:15:41,756 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:15:53,735 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:18:50,380 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:18:50,381 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:18:50,382 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:18:50,390 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:18:50,392 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:18:50,397 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:18:50,399 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:18:50,402 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "9368693269",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "14082519920307656X",
      "insurantCertiType": "I",
      "insurantName": "投保人王高洁",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "350430199703075668",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:18:50,403 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"9368693269\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"14082519920307656X\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王高洁\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"350430199703075668\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:18:50,849 [pool-3-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030632\",\"insuredId\":\"9368693269\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:18:50,856 [pool-3-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:18:50,861 [pool-3-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:18:50,862 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:20:57,655 [http-nio-9090-exec-14] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 10:21:00,876 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:21:00,876 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:00,877 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:21:00,879 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:21:00,881 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:21:00,883 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:21:00,886 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:21:00,889 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2596979399",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "320826199203072366",
      "insurantCertiType": "I",
      "insurantName": "投保人王冰凡",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "542231199703078941",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:00,890 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"2596979399\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"320826199203072366\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王冰凡\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"542231199703078941\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:21:01,337 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030644\",\"insuredId\":\"2596979399\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:21:01,342 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:21:01,344 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:21:01,345 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:21:09,758 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:21:09,758 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:09,759 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:21:09,762 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:21:09,767 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:21:09,770 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:21:09,774 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:21:09,781 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1114396364",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "220882199203075708",
      "insurantCertiType": "I",
      "insurantName": "投保人张海亦",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "411481199703073168",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:09,781 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"1114396364\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"220882199203075708\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张海亦\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"411481199703073168\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:21:10,226 [pool-5-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030645\",\"insuredId\":\"1114396364\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:21:10,234 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:21:10,244 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:21:10,245 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:21:20,870 [pool-5-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:21:24,830 [pool-5-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:21:24,832 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:24,833 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:21:24,834 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:21:24,838 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:21:24,841 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:21:24,843 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:21:24,846 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2715783234",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "36118119920307792X",
      "insurantCertiType": "I",
      "insurantName": "投保人王嘉容",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "341004199703075005",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:24,847 [pool-5-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"2715783234\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"36118119920307792X\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王嘉容\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"341004199703075005\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:21:25,326 [pool-5-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030646\",\"insuredId\":\"2715783234\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:21:25,329 [pool-5-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:21:25,333 [pool-5-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:21:25,333 [pool-5-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:21:26,866 [pool-4-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:21:31,629 [pool-4-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:21:31,629 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:31,630 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:21:31,631 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:21:31,633 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:21:31,635 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:21:31,636 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:21:31,639 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "6179832819",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "430100199203071746",
      "insurantCertiType": "I",
      "insurantName": "投保人王又青",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "36072119970307806X",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:21:31,640 [pool-4-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"6179832819\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"430100199203071746\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王又青\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"36072119970307806X\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:21:32,085 [pool-4-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030647\",\"insuredId\":\"6179832819\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:21:32,088 [pool-4-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:21:32,089 [pool-4-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:21:32,090 [pool-4-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:21:33,993 [http-nio-9090-exec-11] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 10:21:52,097 [http-nio-9090-exec-10] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 10:25:54,373 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:25:54,373 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:25:54,376 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:25:54,376 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:25:54,377 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:25:54,380 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:25:54,385 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:25:54,388 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:25:54,391 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:25:54,394 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:25:54,397 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:25:54,400 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6818176587","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "320623199203071187","insurantCertiType": "I", "insurantName": "投保人郦鸿运","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "360727199703071368","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15703980114"}}
2017-03-07 10:25:54,403 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6818176587\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"320623199203071187\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人郦鸿运\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"360727199703071368\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15703980114\"}}"}
2017-03-07 10:25:54,857 [pool-6-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030649\",\"insuredId\":\"6818176587\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:25:54,859 [pool-6-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:25:54,860 [pool-6-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:25:54,861 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:25:54,864 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:25:54,867 [pool-6-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030649==27030649
2017-03-07 10:25:54,868 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:26:00,734 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:26:00,735 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:26:00,735 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:26:00,736 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:26:00,736 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:26:00,736 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:26:00,738 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:26:00,739 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:26:00,742 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:26:00,743 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:26:00,745 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:26:00,746 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "4383379688","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "610430199203075526","insurantCertiType": "I", "insurantName": "投保人行雅昶","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "43040519970307444X","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13602396417"}}
2017-03-07 10:26:00,747 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"4383379688\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"610430199203075526\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人行雅昶\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"43040519970307444X\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13602396417\"}}"}
2017-03-07 10:26:01,218 [pool-6-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030650\",\"insuredId\":\"4383379688\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:26:01,221 [pool-6-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:26:01,223 [pool-6-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:26:01,224 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:26:01,225 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:26:01,227 [pool-6-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030650==27030650
2017-03-07 10:26:01,228 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:26:53,040 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:26:53,041 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:26:53,041 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:26:53,041 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:26:53,042 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:26:53,042 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:26:53,045 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:26:53,047 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:26:53,050 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:26:53,053 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:26:53,055 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:26:53,062 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "9751835372","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "510121199203079504","insurantCertiType": "I", "insurantName": "投保人涂依玉","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "130900199703077661","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13100912339"}}
2017-03-07 10:26:53,063 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"9751835372\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"510121199203079504\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人涂依玉\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"130900199703077661\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13100912339\"}}"}
2017-03-07 10:26:53,551 [pool-6-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030651\",\"insuredId\":\"9751835372\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:26:53,555 [pool-6-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:26:53,559 [pool-6-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:26:53,560 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:26:53,562 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:26:53,563 [pool-6-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030651==27030651
2017-03-07 10:26:53,564 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:26:54,714 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:26:54,724 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:26:54,725 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:26:54,728 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:26:54,728 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:26:54,729 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:26:54,730 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:26:54,733 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:26:54,735 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:26:54,737 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:26:54,738 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:26:54,741 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "5856643595","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "211121199203075781","insurantCertiType": "I", "insurantName": "投保人张凯安","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "210922199703073749","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13407036195"}}
2017-03-07 10:26:54,741 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"5856643595\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"211121199203075781\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张凯安\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"210922199703073749\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13407036195\"}}"}
2017-03-07 10:26:55,185 [pool-6-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030652\",\"insuredId\":\"5856643595\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:26:55,191 [pool-6-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:26:55,197 [pool-6-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:26:55,198 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:26:55,205 [pool-6-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:26:55,207 [pool-6-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030652==27030652
2017-03-07 10:26:55,208 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:39:55,404 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:39:55,407 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:39:55,411 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:39:55,412 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:39:55,412 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:39:55,413 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:39:55,422 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:39:55,436 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:39:55,448 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:39:55,455 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:39:55,457 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:39:55,459 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "9341675493","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "420822199203072364","insurantCertiType": "I", "insurantName": "投保人王怜容","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "430902199703079986","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15608626716"}}
2017-03-07 10:39:55,460 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"9341675493\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"420822199203072364\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王怜容\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"430902199703079986\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15608626716\"}}"}
2017-03-07 10:39:55,911 [pool-7-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030714\",\"insuredId\":\"9341675493\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:39:55,922 [pool-7-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:39:55,924 [pool-7-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:39:55,925 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:39:55,927 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:39:55,929 [pool-7-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030714==27030714
2017-03-07 10:39:55,929 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:40:08,103 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:40:08,104 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:40:08,106 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:40:08,106 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:40:08,106 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:40:08,107 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:40:08,109 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:40:08,124 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:40:08,126 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:40:08,127 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:40:08,130 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:40:08,131 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "2967147456","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "331127199203079841","insurantCertiType": "I", "insurantName": "投保人张代卉","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "370883199703075308","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13708417949"}}
2017-03-07 10:40:08,131 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"2967147456\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"331127199203079841\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张代卉\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"370883199703075308\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13708417949\"}}"}
2017-03-07 10:40:08,568 [pool-7-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030716\",\"insuredId\":\"2967147456\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:40:08,571 [pool-7-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:40:08,573 [pool-7-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:40:08,574 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:40:08,576 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:40:08,578 [pool-7-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030716==27030716
2017-03-07 10:40:08,578 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:40:10,584 [pool-7-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:40:10,587 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:40:10,599 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:40:10,600 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:40:10,601 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:40:10,602 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:40:10,603 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:40:10,606 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:40:10,608 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:40:10,611 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:40:10,613 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:40:10,616 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "2816315147","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "511300199203075300","insurantCertiType": "I", "insurantName": "投保人王晓彤","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "530628199703070288","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15603912158"}}
2017-03-07 10:40:10,616 [pool-7-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"2816315147\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"511300199203075300\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王晓彤\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"530628199703070288\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15603912158\"}}"}
2017-03-07 10:40:11,073 [pool-7-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030719\",\"insuredId\":\"2816315147\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:40:11,075 [pool-7-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:40:11,076 [pool-7-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:40:11,077 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:40:11,078 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:40:11,080 [pool-7-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030719==27030719
2017-03-07 10:40:11,080 [pool-7-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:40:13,991 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 10:40:13,991 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 10:40:13,992 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 10:40:13,992 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 10:40:13,992 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 10:40:13,992 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:40:13,993 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:40:13,994 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:40:13,995 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:40:13,995 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:40:13,996 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 10:40:13,997 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6312111167","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "411424199203076007","insurantCertiType": "I", "insurantName": "投保人初麦冬","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "420822199703070103","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15300878392"}}
2017-03-07 10:40:13,998 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6312111167\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"411424199203076007\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人初麦冬\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"420822199703070103\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15300878392\"}}"}
2017-03-07 10:40:14,437 [pool-7-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030720\",\"insuredId\":\"6312111167\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:40:14,443 [pool-7-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:40:14,448 [pool-7-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:40:14,449 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 10:40:14,452 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 10:40:14,455 [pool-7-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030720==27030720
2017-03-07 10:40:14,456 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 10:48:21,872 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:48:21,875 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:48:21,876 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:48:21,877 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:48:21,898 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:48:21,903 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:48:21,909 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:48:21,916 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "6875544182",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "440104199203070361",
      "insurantCertiType": "I",
      "insurantName": "投保人王华容",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "321011199703073181",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:48:21,917 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"6875544182\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"440104199203070361\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王华容\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"321011199703073181\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:48:22,411 [pool-8-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:48:22,486 [pool-8-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030736\",\"insuredId\":\"6875544182\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:48:22,489 [pool-8-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:48:22,491 [pool-8-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:48:22,491 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:48:23,031 [pool-8-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 10:48:23,032 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:48:23,065 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 10:48:23,071 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 10:48:23,073 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 10:48:23,075 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 10:48:23,076 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 10:48:23,081 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "6556163514",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "610523199203078905",
      "insurantCertiType": "I",
      "insurantName": "投保人张嘉颖",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "620825199703076907",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 10:48:23,081 [pool-8-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"6556163514\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"610523199203078905\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张嘉颖\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"620825199703076907\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 10:48:23,671 [pool-8-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030737\",\"insuredId\":\"6556163514\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 10:48:23,673 [pool-8-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 10:48:23,674 [pool-8-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 10:48:23,675 [pool-8-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 10:48:26,654 [http-nio-9090-exec-10] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 13:47:12,111 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 51040 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 13:47:12,121 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 13:47:12,255 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Tue Mar 07 13:47:12 CST 2017]; root of context hierarchy
2017-03-07 13:47:12,689 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 13:47:15,270 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8d12391d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 13:47:16,980 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 13:47:17,012 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 13:47:17,014 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 13:47:17,418 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 13:47:17,419 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 5164 ms
2017-03-07 13:47:17,850 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 13:47:17,868 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 13:47:17,869 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 13:47:17,870 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 13:47:17,871 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 13:47:18,115 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 13:47:19,744 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Tue Mar 07 13:47:12 CST 2017]; root of context hierarchy
2017-03-07 13:47:19,937 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 13:47:19,940 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 13:47:19,941 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 13:47:19,942 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 13:47:19,944 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 13:47:19,945 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 13:47:19,954 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 13:47:19,955 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 13:47:19,955 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 13:47:19,956 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 13:47:19,957 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 13:47:19,958 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 13:47:19,959 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 13:47:19,964 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 13:47:19,965 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 13:47:20,019 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 13:47:20,020 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 13:47:20,021 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 13:47:20,021 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 13:47:20,048 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 13:47:20,048 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 13:47:20,152 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 13:47:20,985 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 13:47:21,007 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 13:47:21,031 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 13:47:21,061 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 13:47:21,104 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-9090"]
2017-03-07 13:47:21,104 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Stopping service Tomcat
2017-03-07 13:47:21,183 [main] INFO  [org.apache.catalina.util.LifecycleBase] [DirectJDKLog.java:179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2017-03-07 13:47:21,184 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-9090"]
2017-03-07 13:47:21,184 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-9090"]
2017-03-07 13:47:21,196 [main] INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer] [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report enable debug logging (start with --debug)


2017-03-07 13:47:21,226 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:982] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Tue Mar 07 13:47:12 CST 2017]; root of context hierarchy
2017-03-07 13:47:21,233 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2017-03-07 13:47:47,999 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 50336 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 13:47:48,012 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 13:47:48,283 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Tue Mar 07 13:47:48 CST 2017]; root of context hierarchy
2017-03-07 13:47:48,427 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 13:47:51,303 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$75f00ed5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 13:47:53,017 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 13:47:53,047 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 13:47:53,049 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 13:47:53,335 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 13:47:53,336 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 5053 ms
2017-03-07 13:47:53,679 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 13:47:53,687 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 13:47:53,688 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 13:47:53,688 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 13:47:53,688 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 13:47:53,847 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 13:47:55,502 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Tue Mar 07 13:47:48 CST 2017]; root of context hierarchy
2017-03-07 13:47:55,678 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 13:47:55,680 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 13:47:55,681 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 13:47:55,685 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 13:47:55,686 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 13:47:55,687 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 13:47:55,696 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 13:47:55,697 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 13:47:55,698 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 13:47:55,699 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 13:47:55,700 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 13:47:55,701 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 13:47:55,702 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 13:47:55,711 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 13:47:55,712 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 13:47:55,787 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 13:47:55,790 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 13:47:55,791 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 13:47:55,791 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 13:47:55,820 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 13:47:55,821 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 13:47:55,939 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 13:47:56,791 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 13:47:56,815 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 13:47:56,841 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 13:47:56,880 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 13:47:56,916 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 13:47:56,967 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 13:47:56,979 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 9.689 seconds (JVM running for 11.059)
2017-03-07 13:48:55,240 [http-nio-9090-exec-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 13:48:55,241 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 13:48:55,282 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2017-03-07 13:53:16,083 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 13:53:16,134 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 13:53:16,347 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 13:53:16,733 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 13:53:17,398 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 13:53:17,398 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 13:53:17,399 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 13:53:18,443 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 13:53:18,447 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 13:53:18,487 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 13:53:18,509 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 13:53:18,512 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4245225429",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "533321199203072182",
      "insurantCertiType": "I",
      "insurantName": "投保人王晓丝",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "511825199703079484",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 13:53:18,903 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"4245225429\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"533321199203072182\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王晓丝\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"511825199703079484\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 13:53:20,145 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 13:53:20,147 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 13:53:20,148 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 13:53:20,150 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 13:53:20,152 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "8653828294",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "120106199203073480",
      "insurantCertiType": "I",
      "insurantName": "投保人羊念柏",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "410823199703079241",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 13:53:20,153 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"8653828294\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"120106199203073480\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人羊念柏\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"410823199703079241\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 13:53:20,357 [pool-2-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030953\",\"insuredId\":\"4245225429\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 13:53:20,425 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 13:53:20,440 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 13:53:20,448 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 13:53:20,825 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030954\",\"insuredId\":\"8653828294\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 13:53:20,828 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 13:53:20,830 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 13:53:20,831 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 13:53:29,610 [http-nio-9090-exec-1] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:00:41,023 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:00:41,023 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:00:41,024 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:00:42,424 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:00:44,776 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:00:44,778 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:00:44,779 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:00:44,780 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:00:44,782 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "9515876157",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "360111199203072766",
      "insurantCertiType": "I",
      "insurantName": "投保人貊笑南",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "350122199703074028",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:00:44,782 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"9515876157\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"360111199203072766\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人貊笑南\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"350122199703074028\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:00:45,612 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030959\",\"insuredId\":\"9515876157\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:00:45,614 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:00:45,616 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:00:45,616 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:00:47,079 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:00:47,079 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:00:47,080 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:00:55,316 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:00:55,318 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:00:55,320 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:00:55,321 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:00:55,327 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "8922433171",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "445224199203074608",
      "insurantCertiType": "I",
      "insurantName": "投保人张亦玉",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "330102199703079428",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:00:55,329 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"8922433171\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"445224199203074608\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张亦玉\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"330102199703079428\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:00:56,015 [pool-3-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030960\",\"insuredId\":\"8922433171\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:00:56,017 [pool-3-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:00:56,020 [pool-3-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:00:56,021 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:01:39,270 [http-nio-9090-exec-9] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:04:53,670 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:04:53,671 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:04:53,672 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:07:21,637 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:07:21,640 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:07:21,653 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:07:21,657 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:07:21,658 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2355334486",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "441602199203079265",
      "insurantCertiType": "I",
      "insurantName": "投保人王倩秀",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "522422199703074343",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:07:21,659 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"2355334486\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"441602199203079265\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王倩秀\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"522422199703074343\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:07:22,853 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030971\",\"insuredId\":\"2355334486\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:07:22,857 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:07:22,860 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:07:22,860 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:15:03,940 [pool-4-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:15:04,713 [pool-4-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:15:04,713 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:15:04,725 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:15:05,752 [http-nio-9090-exec-9] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:15:07,698 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:15:07,699 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:15:07,701 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:15:07,702 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:15:07,705 [pool-4-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4883691556",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "421222199203076785",
      "insurantCertiType": "I",
      "insurantName": "投保人畅梦山",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "360600199703073106",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:15:07,705 [pool-4-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"4883691556\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"421222199203076785\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人畅梦山\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"360600199703073106\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:15:08,171 [pool-4-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030990\",\"insuredId\":\"4883691556\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:15:08,175 [pool-4-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:15:08,179 [pool-4-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:15:08,180 [pool-4-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:17:22,906 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:17:22,906 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:17:22,907 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:17:25,920 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:17:25,922 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:17:25,923 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:17:25,924 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:17:25,926 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1864324673",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "510623199203074105",
      "insurantCertiType": "I",
      "insurantName": "投保人邵从蓉",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "542400199703071527",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:17:25,926 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"1864324673\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"510623199203074105\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人邵从蓉\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"542400199703071527\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:17:28,936 [pool-5-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {}
2017-03-07 14:17:28,937 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - msgCode==1
2017-03-07 14:17:28,937 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - msgInfo>>保单信息验证成功
2017-03-07 14:17:28,938 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:17:58,499 [pool-5-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:18:07,370 [http-nio-9090-exec-9] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:18:19,373 [pool-5-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:18:19,373 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:18:19,374 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:18:21,608 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:18:21,613 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:18:21,617 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:18:21,626 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:18:21,631 [pool-5-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4194211851",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "230713199203073888",
      "insurantCertiType": "I",
      "insurantName": "投保人张淑静",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "450332199703074965",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:18:21,632 [pool-5-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"4194211851\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"230713199203073888\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张淑静\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"450332199703074965\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:18:22,406 [pool-5-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031007\",\"insuredId\":\"4194211851\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:18:22,409 [pool-5-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:18:22,411 [pool-5-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:18:22,411 [pool-5-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:19:49,036 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:19:49,036 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:19:49,036 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:19:52,456 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:19:55,522 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:19:55,524 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:19:55,525 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:19:55,531 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:19:55,534 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4625883841",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "360424199203079886",
      "insurantCertiType": "I",
      "insurantName": "投保人张鸿朗",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "511900199703071245",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:19:55,535 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"4625883841\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"360424199203079886\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张鸿朗\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"511900199703071245\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:19:55,982 [pool-6-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031011\",\"insuredId\":\"4625883841\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:19:55,985 [pool-6-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:19:55,992 [pool-6-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:19:55,992 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:20:20,186 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:20:20,187 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:20:20,188 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:20:55,464 [http-nio-9090-exec-7] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:20:58,050 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:20:58,052 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:20:58,053 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:20:58,054 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:20:58,055 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "5685496149",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "620821199203079065",
      "insurantCertiType": "I",
      "insurantName": "投保人王俊逸",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "150521199703073760",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-07 14:20:58,056 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"5685496149\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"620821199203079065\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王俊逸\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"150521199703073760\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:20:58,527 [pool-6-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031052\",\"insuredId\":\"5685496149\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:20:58,530 [pool-6-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:20:58,535 [pool-6-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:20:58,535 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-07 14:24:15,194 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:25:03,176 [http-nio-9090-exec-9] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:30:04,711 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:30:55,923 [http-nio-9090-exec-5] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:33:36,297 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:36:11,617 [http-nio-9090-exec-2] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:42:20,410 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:42:28,582 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 14:42:28,587 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:42:35,067 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:42:35,069 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:42:35,071 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:42:35,072 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:42:35,073 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1689899487",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "150782199203079182",
      "insurantCertiType": "I",
      "insurantName": "投保人王波光",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "441821199703079261",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 14:42:35,074 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"1689899487\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"150782199203079182\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王波光\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"441821199703079261\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:42:35,537 [pool-10-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031195\",\"insuredId\":\"1689899487\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:42:35,538 [http-nio-9090-exec-3] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Postprocessor.doPostprocessor(Postprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseAfterRunDTO(CaseDTO.java:47)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:40)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:47:17,327 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-07 14:47:20,984 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 14:47:20,985 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:47:22,615 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:47:22,616 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:47:22,617 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:47:22,618 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:47:22,620 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2195382997",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "532926199203074560",
      "insurantCertiType": "I",
      "insurantName": "投保人张一璇",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "410304199703071585",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 14:47:22,620 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"2195382997\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"532926199203074560\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张一璇\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"410304199703071585\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:47:23,058 [pool-11-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031216\",\"insuredId\":\"2195382997\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:47:23,059 [http-nio-9090-exec-9] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Postprocessor.doPostprocessor(Postprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseAfterRunDTO(CaseDTO.java:47)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:40)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:59:20,290 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 14:59:21,661 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 14:59:21,662 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 14:59:21,663 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 14:59:21,663 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 14:59:21,664 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:59:30,719 [pool-13-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:远程调试001-TestCase-2,接口类型: OpenAPI
2017-03-07 14:59:32,495 [pool-13-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 14:59:32,496 [pool-13-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:59:33,184 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:59:33,187 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:59:33,191 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:59:33,193 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:59:33,195 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 14:59:33,210 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6534132664","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "330204199203078128","insurantCertiType": "I", "insurantName": "投保人司空初夏","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "370800199703071648","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13002413640"}}
2017-03-07 14:59:33,210 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6534132664\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"330204199203078128\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人司空初夏\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"370800199703071648\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13002413640\"}}"}
2017-03-07 14:59:33,728 [pool-12-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031320\",\"insuredId\":\"6534132664\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:59:33,731 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:59:33,734 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:59:33,735 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 14:59:33,738 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 14:59:33,740 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27031320==27031320
2017-03-07 14:59:33,741 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 14:59:34,191 [pool-13-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:59:34,193 [pool-13-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:59:34,196 [pool-13-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:59:34,198 [pool-13-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:59:34,201 [pool-13-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1448882616",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "350205199203070927",
      "insurantCertiType": "I",
      "insurantName": "投保人张初阳",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "430511199703073829",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 14:59:34,202 [pool-13-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"1448882616\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"350205199203070927\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张初阳\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"430511199703073829\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 14:59:34,640 [pool-13-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031321\",\"insuredId\":\"1448882616\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:59:34,642 [http-nio-9090-exec-2] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Postprocessor.doPostprocessor(Postprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseAfterRunDTO(CaseDTO.java:47)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:40)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 14:59:38,014 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 14:59:39,442 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 14:59:39,442 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 14:59:39,451 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 14:59:39,451 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 14:59:39,458 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 14:59:40,188 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 14:59:40,190 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 14:59:40,192 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 14:59:40,193 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 14:59:40,194 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 14:59:40,195 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "4512844912","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "440600199203073468","insurantCertiType": "I", "insurantName": "投保人宗逸思","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "321002199703076167","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13001905201"}}
2017-03-07 14:59:40,197 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"4512844912\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"440600199203073468\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人宗逸思\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"321002199703076167\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13001905201\"}}"}
2017-03-07 14:59:40,638 [pool-12-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031323\",\"insuredId\":\"4512844912\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 14:59:40,641 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 14:59:40,645 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 14:59:40,646 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 14:59:40,648 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 14:59:40,651 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27031323==27031323
2017-03-07 14:59:40,651 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:00:48,499 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:00:52,960 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:00:52,961 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:00:55,090 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:00:55,091 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:00:55,095 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:00:55,096 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:00:55,100 [pool-14-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2492721163",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "52010019920307974X",
      "insurantCertiType": "I",
      "insurantName": "投保人能夏柳",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "530424199703075568",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:00:55,101 [pool-14-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"2492721163\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"52010019920307974X\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人能夏柳\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"530424199703075568\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:00:56,421 [pool-14-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031338\",\"insuredId\":\"2492721163\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:00:56,436 [http-nio-9090-exec-5] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Postprocessor.doPostprocessor(Postprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseAfterRunDTO(CaseDTO.java:47)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:40)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 15:01:20,917 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 62800 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 15:01:20,921 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 15:01:21,073 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 15:01:21 CST 2017]; root of context hierarchy
2017-03-07 15:01:21,370 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 15:01:24,438 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 15:01:26,114 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 15:01:26,139 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 15:01:26,142 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 15:01:26,494 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 15:01:26,495 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 5421 ms
2017-03-07 15:01:26,782 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 15:01:26,788 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 15:01:26,789 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 15:01:26,789 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 15:01:26,790 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 15:01:26,905 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 15:01:27,982 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 15:01:21 CST 2017]; root of context hierarchy
2017-03-07 15:01:28,116 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:01:28,117 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:01:28,121 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 15:01:28,122 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 15:01:28,122 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 15:01:28,123 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 15:01:28,132 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 15:01:28,132 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:01:28,133 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:01:28,133 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 15:01:28,134 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 15:01:28,134 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 15:01:28,136 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 15:01:28,143 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 15:01:28,144 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 15:01:28,183 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 15:01:28,183 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 15:01:28,184 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 15:01:28,184 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 15:01:28,204 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:01:28,204 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:01:28,272 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:01:28,736 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 15:01:28,761 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 15:01:28,778 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 15:01:28,821 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 15:01:28,854 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 15:01:28,900 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 15:01:28,906 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 8.561 seconds (JVM running for 10.037)
2017-03-07 15:01:45,704 [http-nio-9090-exec-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 15:01:45,704 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 15:01:45,731 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2017-03-07 15:01:45,835 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:01:45,851 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:01:45,950 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:01:45,992 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:01:45,995 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:01:46,029 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:01:46,044 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:01:46,047 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3447516735",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "220623199203077120",
      "insurantCertiType": "I",
      "insurantName": "投保人王幼丝",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "620421199703070006",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:01:46,344 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"3447516735\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"220623199203077120\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王幼丝\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"620421199703070006\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:01:47,766 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031339\",\"insuredId\":\"3447516735\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:01:47,778 [http-nio-9090-exec-1] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Postprocessor.doPostprocessor(Postprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseAfterRunDTO(CaseDTO.java:47)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:40)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 15:02:48,992 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:02:48,993 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 15:02:48,995 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 15:02:48,996 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 15:02:48,997 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 15:02:48,997 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:02:48,999 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:02:49,002 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:02:49,005 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:02:49,008 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:02:49,011 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 15:02:49,015 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "5726615131","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "340222199203070606","insurantCertiType": "I", "insurantName": "投保人公良怜南","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "371000199703072963","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13907111142"}}
2017-03-07 15:02:49,016 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"5726615131\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"340222199203070606\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人公良怜南\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"371000199703072963\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13907111142\"}}"}
2017-03-07 15:02:49,560 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031342\",\"insuredId\":\"5726615131\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:02:49,574 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:02:49,576 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 15:02:49,576 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 15:02:49,578 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 15:02:49,580 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27031342==27031342
2017-03-07 15:02:49,592 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:02:49,593 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:02:49,593 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 15:02:49,593 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 15:02:49,595 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 15:02:49,596 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 15:02:49,597 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:02:49,598 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:02:49,600 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:02:49,602 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:02:49,603 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:02:49,608 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 15:02:49,610 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "1472993782","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "450127199203072048","insurantCertiType": "I", "insurantName": "投保人王云韶","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "422825199703071780","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15700255760"}}
2017-03-07 15:02:49,614 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"1472993782\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"450127199203072048\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王云韶\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"422825199703071780\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15700255760\"}}"}
2017-03-07 15:02:50,094 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031343\",\"insuredId\":\"1472993782\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:02:50,096 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:02:50,097 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 15:02:50,097 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 15:02:50,108 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 15:02:50,109 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27031343==27031343
2017-03-07 15:02:50,110 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:08:00,126 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 65200 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 15:08:00,135 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 15:08:00,416 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64a40280: startup date [Tue Mar 07 15:08:00 CST 2017]; root of context hierarchy
2017-03-07 15:08:00,591 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 15:08:04,385 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bad16613] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 15:08:06,746 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 15:08:06,776 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 15:08:06,779 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 15:08:10,200 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 15:08:10,201 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 9785 ms
2017-03-07 15:08:10,675 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 15:08:10,684 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 15:08:10,685 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 15:08:10,686 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 15:08:10,687 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 15:08:10,942 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 15:08:12,826 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64a40280: startup date [Tue Mar 07 15:08:00 CST 2017]; root of context hierarchy
2017-03-07 15:08:13,020 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 15:08:13,022 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 15:08:13,023 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 15:08:13,024 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 15:08:13,025 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:08:13,025 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:08:13,032 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 15:08:13,033 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 15:08:13,033 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:08:13,034 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:08:13,035 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 15:08:13,035 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 15:08:13,037 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 15:08:13,046 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 15:08:13,047 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 15:08:13,104 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 15:08:13,105 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 15:08:13,105 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 15:08:13,106 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 15:08:13,138 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:08:13,139 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:08:13,242 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:08:14,041 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 15:08:14,073 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 15:08:14,139 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 15:08:14,216 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 15:08:14,280 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 15:08:14,385 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 15:08:14,393 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 15.212 seconds (JVM running for 26.568)
2017-03-07 15:12:32,483 [http-nio-9090-exec-7] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 15:12:32,484 [http-nio-9090-exec-7] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 15:12:32,528 [http-nio-9090-exec-7] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2017-03-07 15:14:47,528 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 65284 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 15:14:47,545 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 15:14:47,685 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Tue Mar 07 15:14:47 CST 2017]; root of context hierarchy
2017-03-07 15:14:47,989 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 15:14:50,603 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d7f4294c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 15:14:52,076 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 15:14:52,105 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 15:14:52,108 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 15:14:52,408 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 15:14:52,409 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4724 ms
2017-03-07 15:14:52,811 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 15:14:52,820 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 15:14:52,821 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 15:14:52,822 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 15:14:52,822 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 15:14:52,996 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 15:14:54,293 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Tue Mar 07 15:14:47 CST 2017]; root of context hierarchy
2017-03-07 15:14:54,464 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 15:14:54,467 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 15:14:54,468 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 15:14:54,468 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 15:14:54,469 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:14:54,469 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:14:54,474 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 15:14:54,475 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 15:14:54,476 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:14:54,477 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:14:54,478 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 15:14:54,478 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 15:14:54,479 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 15:14:54,486 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 15:14:54,487 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 15:14:54,551 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 15:14:54,552 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 15:14:54,552 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 15:14:54,553 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 15:14:54,579 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:14:54,580 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:14:54,684 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:14:55,497 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 15:14:55,531 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 15:14:55,558 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 15:14:55,589 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 15:14:55,621 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 15:14:55,675 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 15:14:55,682 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 8.834 seconds (JVM running for 10.137)
2017-03-07 15:15:10,150 [http-nio-9090-exec-2] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 15:15:10,151 [http-nio-9090-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 15:15:10,197 [http-nio-9090-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2017-03-07 15:15:38,554 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:17:13,418 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:17:21,682 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:17:28,145 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:17:28,150 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:17:28,193 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:17:28,212 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:17:28,215 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "8827764334",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "510114199203075681",
      "insurantCertiType": "I",
      "insurantName": "投保人张半香",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "210411199703074104",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:17:28,538 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"8827764334\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"510114199203075681\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张半香\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"210411199703074104\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:17:29,636 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031453\",\"insuredId\":\"8827764334\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:17:29,658 [http-nio-9090-exec-2] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Postprocessor.doPostprocessor(Postprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseAfterRunDTO(CaseDTO.java:47)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:40)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 15:22:20,133 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:22:53,554 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:22:56,666 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:23:09,946 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:23:09,949 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:23:09,952 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:23:09,955 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:23:09,958 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "6664542657",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "53092119920307134X",
      "insurantCertiType": "I",
      "insurantName": "投保人王升荣",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "653131199703079443",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:24:15,965 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"6664542657\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"53092119920307134X\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王升荣\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"653131199703079443\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:24:29,184 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031495\",\"insuredId\":\"6664542657\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:25:33,948 [http-nio-9090-exec-18] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Postprocessor.doPostprocessor(Postprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseAfterRunDTO(CaseDTO.java:47)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:40)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 15:26:58,651 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:27:00,076 [http-nio-9090-exec-15] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 15:31:13,580 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 64940 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 15:31:13,585 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 15:31:13,708 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 15:31:13 CST 2017]; root of context hierarchy
2017-03-07 15:31:13,948 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 15:31:15,925 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 15:31:17,416 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 15:31:17,442 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 15:31:17,444 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 15:31:17,802 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 15:31:17,802 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4095 ms
2017-03-07 15:31:18,089 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 15:31:18,099 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 15:31:18,100 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 15:31:18,101 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 15:31:18,102 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 15:31:18,238 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 15:31:19,322 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 15:31:13 CST 2017]; root of context hierarchy
2017-03-07 15:31:19,478 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 15:31:19,480 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 15:31:19,481 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 15:31:19,482 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:31:19,482 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:31:19,482 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 15:31:19,488 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 15:31:19,488 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:31:19,489 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:31:19,489 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 15:31:19,490 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 15:31:19,490 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 15:31:19,491 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 15:31:19,495 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 15:31:19,495 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 15:31:19,525 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 15:31:19,525 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 15:31:19,526 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 15:31:19,526 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 15:31:19,544 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:31:19,544 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:31:19,602 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:31:20,021 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 15:31:20,038 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 15:31:20,057 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 15:31:20,081 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 15:31:20,118 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 15:31:20,166 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 15:31:20,172 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 7.338 seconds (JVM running for 8.505)
2017-03-07 15:33:00,523 [http-nio-9090-exec-5] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 15:33:00,523 [http-nio-9090-exec-5] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 15:33:00,567 [http-nio-9090-exec-5] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2017-03-07 15:33:00,630 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:33:00,639 [http-nio-9090-exec-5] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-07 15:34:48,123 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 64564 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 15:34:48,128 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 15:34:48,252 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 15:34:48 CST 2017]; root of context hierarchy
2017-03-07 15:34:48,566 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 15:34:50,622 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 15:34:52,017 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 15:34:52,048 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 15:34:52,052 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 15:34:52,307 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 15:34:52,308 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4056 ms
2017-03-07 15:34:52,601 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 15:34:52,613 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 15:34:52,615 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 15:34:52,616 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 15:34:52,616 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 15:34:52,922 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 15:34:54,262 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 15:34:48 CST 2017]; root of context hierarchy
2017-03-07 15:34:54,464 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 15:34:54,468 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 15:34:54,469 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 15:34:54,470 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:34:54,470 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:34:54,471 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 15:34:54,478 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 15:34:54,479 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 15:34:54,479 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 15:34:54,479 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 15:34:54,482 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 15:34:54,484 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 15:34:54,486 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 15:34:54,498 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 15:34:54,499 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 15:34:54,544 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 15:34:54,546 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 15:34:54,547 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 15:34:54,547 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 15:34:54,572 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:34:54,573 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:34:54,657 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 15:34:55,124 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 15:34:55,143 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 15:34:55,160 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 15:34:55,184 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 15:34:55,210 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 15:34:55,243 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 15:34:55,250 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 7.661 seconds (JVM running for 8.575)
2017-03-07 15:35:05,986 [http-nio-9090-exec-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 15:35:05,986 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 15:35:06,014 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2017-03-07 15:35:06,090 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:35:06,099 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 15:35:06,186 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 15:35:06,192 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 15:35:06,193 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 15:35:06,194 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:35:06,263 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:35:06,265 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:35:06,287 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:35:06,299 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:35:06,304 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 15:35:06,309 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6197542169","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "320100199203077288","insurantCertiType": "I", "insurantName": "投保人卷夏柳","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "230700199703078106","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13802510730"}}
2017-03-07 15:35:06,548 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6197542169\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"320100199203077288\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人卷夏柳\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"230700199703078106\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13802510730\"}}"}
2017-03-07 15:35:07,713 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031738\",\"insuredId\":\"6197542169\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:35:07,731 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:35:07,738 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 15:35:07,739 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 15:35:07,749 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 15:35:07,756 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27031738==27031738
2017-03-07 15:35:07,765 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:35:07,766 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:35:07,766 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 15:35:07,766 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 15:35:07,767 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 15:35:07,767 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 15:35:07,768 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:35:07,769 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:35:07,772 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:35:07,775 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:35:07,776 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:35:07,778 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 15:35:07,780 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "3952355778","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "652824199203074383","insurantCertiType": "I", "insurantName": "投保人泣阳曦","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "621225199703076606","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15503177942"}}
2017-03-07 15:35:07,781 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"3952355778\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"652824199203074383\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人泣阳曦\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"621225199703076606\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15503177942\"}}"}
2017-03-07 15:35:08,219 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031739\",\"insuredId\":\"3952355778\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:35:08,220 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:35:08,221 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 15:35:08,222 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 15:35:08,223 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 15:35:08,226 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27031739==27031739
2017-03-07 15:35:08,226 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:39:28,094 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:39:28,096 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:39:28,097 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:39:28,098 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:39:28,099 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:39:28,101 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:39:28,104 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:39:28,107 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "9876565523",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "370613199203079783",
      "insurantCertiType": "I",
      "insurantName": "投保人林飞章",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "430800199703076509",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:39:28,108 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"9876565523\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"370613199203079783\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人林飞章\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"430800199703076509\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:39:28,548 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031894\",\"insuredId\":\"9876565523\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:39:28,550 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:39:28,553 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 15:39:28,553 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend(\"TC002\",\"policyId\")]开始解析...
2017-03-07 15:39:28,555 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:39:28,555 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:39:28,555 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:39:28,563 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:39:28,564 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:39:28,565 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:39:28,566 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:39:28,567 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:39:28,569 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2143216453",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "440113199203078140",
      "insurantCertiType": "I",
      "insurantName": "投保人张夜蓉",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "330683199703076089",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:39:28,569 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"2143216453\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"440113199203078140\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张夜蓉\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"330683199703076089\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:39:29,002 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27031895\",\"insuredId\":\"2143216453\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:39:29,004 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:39:29,006 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 15:39:29,006 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend(\"TC002\",\"policyId\")]开始解析...
2017-03-07 15:39:29,008 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:47:39,938 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:47:39,939 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:39,939 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:47:39,941 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:47:39,944 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:47:39,945 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:47:39,946 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:47:39,948 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1739286659",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "410381199203078484",
      "insurantCertiType": "I",
      "insurantName": "投保人张睿广",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "420702199703078921",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:39,949 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"1739286659\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"410381199203078484\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张睿广\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"420702199703078921\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:47:40,380 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032044\",\"insuredId\":\"1739286659\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:47:40,384 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:47:40,386 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent(\"policyId\")]开始解析...
2017-03-07 15:47:40,388 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:47:40,389 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:47:40,389 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:40,390 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:47:40,392 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:47:40,402 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:47:40,403 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:47:40,404 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:47:40,406 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3921474195",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "511322199203077486",
      "insurantCertiType": "I",
      "insurantName": "投保人王珠雨",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "652122199703070345",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:40,406 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"3921474195\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"511322199203077486\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王珠雨\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"652122199703070345\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:47:40,821 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032045\",\"insuredId\":\"3921474195\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:47:40,825 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:47:40,827 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent(\"policyId\")]开始解析...
2017-03-07 15:47:40,829 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:47:56,142 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:47:56,142 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:56,142 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:47:56,143 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:47:56,144 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:47:56,147 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:47:56,148 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:47:56,149 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "9677177441",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "370685199203074909",
      "insurantCertiType": "I",
      "insurantName": "投保人王翠丝",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "610122199703071621",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:56,149 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"9677177441\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"370685199203074909\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王翠丝\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"610122199703071621\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:47:56,596 [pool-5-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032046\",\"insuredId\":\"9677177441\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:47:56,600 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:47:56,601 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent(\"policyId\")]开始解析...
2017-03-07 15:47:56,602 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 15:47:56,603 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 15:47:56,603 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:56,604 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 15:47:56,605 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 15:47:56,606 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 15:47:56,608 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 15:47:56,609 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 15:47:56,613 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3563464559",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170308000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "360122199203077646",
      "insurantCertiType": "I",
      "insurantName": "投保人张绍钧",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "410423199703071088",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-07 15:47:56,613 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"3563464559\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170308000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"360122199203077646\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张绍钧\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"410423199703071088\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-07 15:47:57,052 [pool-5-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032047\",\"insuredId\":\"3563464559\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 15:47:57,053 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 15:47:57,056 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent(\"policyId\")]开始解析...
2017-03-07 15:47:57,060 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 16:58:31,215 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 71416 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 16:58:31,226 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 16:58:31,478 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Tue Mar 07 16:58:31 CST 2017]; root of context hierarchy
2017-03-07 16:58:31,589 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 16:58:34,647 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2664999] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 16:58:36,380 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 16:58:36,407 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 16:58:36,409 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 16:58:36,726 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 16:58:36,727 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 5249 ms
2017-03-07 16:58:37,111 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 16:58:37,122 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 16:58:37,124 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 16:58:37,125 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 16:58:37,126 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 16:58:37,321 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 16:58:38,767 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Tue Mar 07 16:58:31 CST 2017]; root of context hierarchy
2017-03-07 16:58:38,958 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 16:58:38,961 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 16:58:38,962 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 16:58:38,963 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 16:58:38,963 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 16:58:38,965 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 16:58:38,975 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 16:58:38,975 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 16:58:38,975 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 16:58:38,976 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 16:58:38,977 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 16:58:38,978 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 16:58:38,978 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 16:58:38,986 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 16:58:38,988 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 16:58:39,048 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 16:58:39,050 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 16:58:39,050 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 16:58:39,050 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 16:58:39,085 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 16:58:39,086 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 16:58:39,203 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 16:58:39,999 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 16:58:40,022 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 16:58:40,052 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 16:58:40,095 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 16:58:40,136 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 16:58:40,203 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 16:58:40,211 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 9.722 seconds (JVM running for 11.096)
2017-03-07 16:59:44,888 [http-nio-9090-exec-3] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 16:59:44,889 [http-nio-9090-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 16:59:45,145 [http-nio-9090-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 256 ms
2017-03-07 17:00:29,812 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 17:00:32,509 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 17:00:33,910 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 17:00:38,820 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 17:00:40,502 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 17:00:41,628 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 17:00:44,611 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 17:00:44,614 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 17:00:44,615 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 17:00:44,616 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 17:00:45,579 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 17:00:45,580 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 17:00:45,580 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 17:00:45,580 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 17:00:46,520 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 17:00:46,523 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 17:00:46,523 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 17:00:46,524 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 17:00:48,098 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 17:00:48,100 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 17:00:48,120 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 17:00:48,146 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 17:00:48,149 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 17:00:48,167 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6271968743","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "520323199203073028","insurantCertiType": "I", "insurantName": "投保人张鹤骞","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "610104199703073464","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15106694431"}}
2017-03-07 17:00:48,480 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6271968743\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"520323199203073028\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张鹤骞\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"610104199703073464\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15106694431\"}}"}
2017-03-07 17:00:50,055 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032393\",\"insuredId\":\"6271968743\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 17:00:51,896 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 17:00:51,897 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 17:00:51,898 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 17:00:51,899 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 17:00:51,901 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 17:00:51,902 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "1739233761","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "620725199203075283","insurantCertiType": "I", "insurantName": "投保人张贞韵","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "500226199703070384","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15300145127"}}
2017-03-07 17:00:51,902 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"1739233761\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"620725199203075283\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张贞韵\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"500226199703070384\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15300145127\"}}"}
2017-03-07 17:00:52,451 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032395\",\"insuredId\":\"1739233761\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 17:00:54,097 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 17:00:54,099 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 17:00:54,101 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 17:00:54,103 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 17:00:54,105 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 17:00:54,107 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "5199942672","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "530128199203076440","insurantCertiType": "I", "insurantName": "投保人逢曼岚","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "340823199703079323","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15503153946"}}
2017-03-07 17:00:54,107 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"5199942672\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"530128199203076440\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人逢曼岚\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"340823199703079323\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15503153946\"}}"}
2017-03-07 17:00:54,563 [pool-2-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032401\",\"insuredId\":\"5199942672\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 17:00:55,565 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 17:00:55,567 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 17:00:55,568 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 17:00:55,570 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 17:00:55,578 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27032401==27032401
2017-03-07 17:00:55,581 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 17:00:57,925 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 17:00:57,926 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 17:00:57,927 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 17:00:57,928 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 17:00:57,930 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27032401==27032401
2017-03-07 17:00:57,930 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 17:00:57,931 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 17:00:57,931 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 17:00:57,931 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 17:00:57,931 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 17:00:57,931 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 17:00:57,932 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 17:00:59,249 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 17:00:59,251 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 17:00:59,263 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 17:00:59,265 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 17:00:59,267 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27032401==27032401
2017-03-07 17:00:59,267 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 17:01:00,546 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 17:01:00,548 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 17:01:00,549 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 17:01:00,550 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 17:01:00,552 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 17:01:00,553 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "1595576519","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "450721199203073088","insurantCertiType": "I", "insurantName": "投保人张又琴","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "320722199703079141","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15707708869"}}
2017-03-07 17:01:00,553 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"1595576519\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"450721199203073088\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张又琴\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"320722199703079141\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15707708869\"}}"}
2017-03-07 17:01:01,246 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27032404\",\"insuredId\":\"1595576519\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 17:01:02,381 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 17:01:02,383 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 17:01:02,383 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 17:01:02,385 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 17:01:02,387 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27032404==27032404
2017-03-07 17:01:02,387 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 18:03:59,461 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 76140 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 18:03:59,465 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 18:03:59,592 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 18:03:59 CST 2017]; root of context hierarchy
2017-03-07 18:03:59,916 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 18:04:02,030 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 18:04:03,135 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 18:04:03,158 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 18:04:03,159 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 18:04:03,431 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 18:04:03,431 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 3839 ms
2017-03-07 18:04:03,702 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 18:04:03,714 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 18:04:03,715 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 18:04:03,716 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 18:04:03,716 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 18:04:03,858 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 18:04:04,372 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Stopping service Tomcat
2017-03-07 18:04:04,426 [main] INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer] [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report enable debug logging (start with --debug)


2017-03-07 18:05:15,755 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 76412 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 18:05:15,760 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 18:05:15,934 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 18:05:15 CST 2017]; root of context hierarchy
2017-03-07 18:05:16,128 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 18:05:18,214 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 18:05:19,741 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 18:05:19,767 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 18:05:19,769 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 18:05:20,038 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 18:05:20,038 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4104 ms
2017-03-07 18:05:20,290 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 18:05:20,298 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 18:05:20,299 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 18:05:20,299 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 18:05:20,300 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 18:05:20,422 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 18:05:21,525 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 18:05:15 CST 2017]; root of context hierarchy
2017-03-07 18:05:21,685 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 18:05:21,687 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 18:05:21,690 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 18:05:21,690 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 18:05:21,691 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 18:05:21,692 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 18:05:21,700 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 18:05:21,701 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 18:05:21,701 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 18:05:21,702 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 18:05:21,703 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 18:05:21,705 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 18:05:21,706 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 18:05:21,715 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 18:05:21,716 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 18:05:21,762 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 18:05:21,763 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 18:05:21,764 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 18:05:21,764 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 18:05:21,787 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 18:05:21,787 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 18:05:21,872 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 18:05:22,299 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 18:05:22,320 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 18:05:22,336 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 18:05:22,364 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 18:05:22,394 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-9090"]
2017-03-07 18:05:22,395 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Stopping service Tomcat
2017-03-07 18:05:22,416 [main] INFO  [org.apache.catalina.util.LifecycleBase] [DirectJDKLog.java:179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2017-03-07 18:05:22,416 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-9090"]
2017-03-07 18:05:22,417 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-9090"]
2017-03-07 18:05:22,422 [main] INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer] [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report enable debug logging (start with --debug)


2017-03-07 18:05:22,441 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:982] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 18:05:15 CST 2017]; root of context hierarchy
2017-03-07 18:05:22,443 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2017-03-07 18:12:52,058 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 76652 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-07 18:12:52,063 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-07 18:12:52,181 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 18:12:52 CST 2017]; root of context hierarchy
2017-03-07 18:12:52,502 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-07 18:12:55,275 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-07 18:12:56,795 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-07 18:12:56,827 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-07 18:12:56,831 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-07 18:12:57,057 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-07 18:12:57,058 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4876 ms
2017-03-07 18:12:57,373 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-07 18:12:57,383 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-07 18:12:57,384 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-07 18:12:57,385 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-07 18:12:57,385 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-07 18:12:57,545 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-07 18:12:58,767 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Tue Mar 07 18:12:52 CST 2017]; root of context hierarchy
2017-03-07 18:12:58,922 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-07 18:12:58,925 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-07 18:12:58,926 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-07 18:12:58,927 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-07 18:12:58,928 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 18:12:58,929 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 18:12:58,935 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-07 18:12:58,936 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-07 18:12:58,937 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-07 18:12:58,937 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-07 18:12:58,938 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-07 18:12:58,939 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-07 18:12:58,940 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-07 18:12:58,945 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-07 18:12:58,945 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-07 18:12:58,990 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-07 18:12:58,991 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-07 18:12:58,992 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-07 18:12:58,993 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-07 18:12:59,010 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 18:12:59,010 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 18:12:59,081 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-07 18:12:59,534 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-07 18:12:59,555 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-07 18:12:59,573 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-07 18:12:59,594 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-07 18:12:59,620 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-07 18:12:59,668 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-07 18:12:59,675 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 8.156 seconds (JVM running for 9.016)
2017-03-07 18:15:04,869 [http-nio-9090-exec-3] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-07 18:15:04,869 [http-nio-9090-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-07 18:15:04,903 [http-nio-9090-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2017-03-07 18:15:04,996 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 18:15:05,005 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 18:15:05,010 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 18:15:05,011 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 18:15:05,013 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 18:15:05,016 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 18:15:05,167 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 18:15:05,183 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 18:15:05,185 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 18:15:05,189 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 18:15:05,190 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 18:15:05,191 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 18:15:05,206 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 18:15:05,206 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 18:15:05,207 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 18:15:05,240 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 18:15:05,243 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 18:15:05,245 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 18:15:05,252 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 18:15:05,252 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 18:15:05,256 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 18:15:05,261 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 18:15:05,261 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 18:15:05,268 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 18:15:05,298 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 18:15:05,299 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 18:15:05,308 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 18:15:05,332 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 18:15:05,335 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 18:15:05,336 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 18:15:05,340 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 18:15:05,342 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 18:15:05,344 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 18:15:05,361 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "2416482291","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "610630199203078402","insurantCertiType": "I", "insurantName": "投保人王丹蝶","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "450109199703079980","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15904968354"}}
2017-03-07 18:15:05,361 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "8889483691","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "621027199203077524","insurantCertiType": "I", "insurantName": "投保人王安春","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "211321199703072289","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15706777852"}}
2017-03-07 18:15:05,377 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "7293484871","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "141127199203070729","insurantCertiType": "I", "insurantName": "投保人郜芷天","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "220581199703073386","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15304791604"}}
2017-03-07 18:15:05,710 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"8889483691\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"621027199203077524\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王安春\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"211321199703072289\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15706777852\"}}"}
2017-03-07 18:15:05,711 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"2416482291\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"610630199203078402\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王丹蝶\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"450109199703079980\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15904968354\"}}"}
2017-03-07 18:15:05,712 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"7293484871\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"141127199203070729\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人郜芷天\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"220581199703073386\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15304791604\"}}"}
2017-03-07 18:15:07,078 [pool-2-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27033023\",\"insuredId\":\"8889483691\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 18:15:07,082 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27033022\",\"insuredId\":\"2416482291\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 18:15:07,086 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27033021\",\"insuredId\":\"7293484871\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 18:15:07,119 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 18:15:07,121 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 18:15:07,122 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 18:15:07,124 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 18:15:07,127 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27033021==27033021
2017-03-07 18:15:07,129 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 18:15:07,130 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 18:15:07,131 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 18:15:07,133 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 18:15:07,136 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27033021==27033021
2017-03-07 18:15:07,154 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 18:15:07,156 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 18:15:07,156 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 18:15:07,159 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 18:15:07,160 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27033021==27033021
2017-03-07 18:15:07,166 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 18:15:07,166 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 18:15:07,167 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-07 18:15:07,167 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-07 18:15:07,168 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-07 18:15:07,176 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-07 18:15:07,176 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-07 18:15:07,176 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-07 18:15:07,178 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-07 18:15:07,181 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-07 18:15:07,182 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-07 18:15:07,187 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-07 18:15:07,189 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-07 18:15:07,191 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-07 18:15:07,194 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "4432544832","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170308000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "430822199203073684","insurantCertiType": "I", "insurantName": "投保人遇品韵","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "53230119970307548X","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13100282167"}}
2017-03-07 18:15:07,196 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"4432544832\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170308000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"430822199203073684\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人遇品韵\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"53230119970307548X\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13100282167\"}}"}
2017-03-07 18:15:07,718 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:111] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27033024\",\"insuredId\":\"4432544832\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-07 18:15:07,721 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-07 18:15:07,723 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-07 18:15:07,724 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-07 18:15:07,726 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-07 18:15:07,728 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27033024==27033024
2017-03-07 18:15:07,728 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
