2017-03-03 09:38:31,883 [http-nio-9090-exec-8] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-03 09:38:31:031
2017-03-03 09:38:31,903 [http-nio-9090-exec-8] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@acb00d3]请求开始执行接入
2017-03-03 09:38:31,923 [http-nio-9090-exec-8] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@acb00d3]请求开始执行结束
2017-03-03 09:38:31,929 [http-nio-9090-exec-8] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-03 09:38:31:031
2017-03-03 09:38:32,020 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-03 09:38:32,051 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-03 09:38:32,197 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-03 09:38:32,207 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-03 09:38:32,207 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-03 09:38:32,210 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 09:38:32,264 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 09:38:32,269 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 09:38:32,880 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 09:38:32,910 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 09:38:32,914 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-03 09:38:32,921 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "1529955352","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170304000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "210781199203034726","insurantCertiType": "I", "insurantName": "投保人张梅青","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "231084199703034664","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13102358835"}}
2017-03-03 09:38:33,166 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"1529955352\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170304000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"210781199203034726\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张梅青\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"231084199703034664\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13102358835\"}}"}
2017-03-03 09:38:34,492 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"12000035842\",\"insuredId\":\"1529955352\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-03 09:38:34,548 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-03 09:38:34,559 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-03 09:38:34,561 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-03 09:38:34,568 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-03 09:38:34,574 [pool-4-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 12000035842==12000035842
2017-03-03 09:38:34,583 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-03 09:38:34,584 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-03 09:38:34,585 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-03 09:40:57,314 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 20204 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-03 09:40:57,329 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-03 09:40:57,444 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Fri Mar 03 09:40:57 CST 2017]; root of context hierarchy
2017-03-03 09:40:57,772 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-03 09:41:00,263 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a1daff6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-03 09:41:01,700 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-03 09:41:01,725 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-03 09:41:01,729 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-03 09:41:02,026 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-03 09:41:02,027 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4583 ms
2017-03-03 09:41:02,336 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-03 09:41:02,346 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-03 09:41:02,347 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-03 09:41:02,347 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-03 09:41:02,348 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-03 09:41:02,498 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-03 09:41:03,827 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Fri Mar 03 09:40:57 CST 2017]; root of context hierarchy
2017-03-03 09:41:03,977 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-03 09:41:03,979 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-03 09:41:03,981 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-03 09:41:03,981 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-03 09:41:03,982 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 09:41:03,983 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 09:41:03,989 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-03 09:41:03,991 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-03 09:41:03,993 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 09:41:03,993 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 09:41:03,994 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-03 09:41:03,997 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-03 09:41:03,998 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-03 09:41:04,003 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-03 09:41:04,004 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-03 09:41:04,054 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-03 09:41:04,054 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-03 09:41:04,055 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-03 09:41:04,055 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartservice] onto handler '/heartservice'
2017-03-03 09:41:04,076 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 09:41:04,077 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 09:41:04,174 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 09:41:04,922 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-03 09:41:04,942 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-03 09:41:04,967 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-03 09:41:05,008 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-03 09:41:05,047 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-03 09:41:05,096 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-03 09:41:05,104 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 8.452 seconds (JVM running for 9.766)
2017-03-03 10:16:06,073 [http-nio-9090-exec-2] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-03 10:16:06,073 [http-nio-9090-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-03 10:16:06,114 [http-nio-9090-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2017-03-03 11:12:54,410 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OPEN_API
2017-03-03 11:12:54,447 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:12:55,387 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OPEN_API
2017-03-03 11:12:55,388 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:12:56,867 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:12:56,868 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:12:57,089 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:12:57,093 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:12:57,101 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:12:57,104 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:12:57,139 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:12:57,139 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:12:57,159 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:12:57,161 [pool-7-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "6245947446",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "542332199203037723",
      "insurantCertiType": "I",
      "insurantName": "投保人利从灵",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "360830199703030869",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:12:57,162 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:12:57,165 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3562321475",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "410411199203036168",
      "insurantCertiType": "I",
      "insurantName": "投保人张慧丽",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "610626199703035789",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:12:57,174 [pool-7-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:63] - 当前用例:OPEN_API接口类型异常,忽略,开始执行下一条
2017-03-03 11:12:57,177 [pool-7-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:63] - 当前用例:OPEN_API接口类型异常,忽略,开始执行下一条
2017-03-03 11:12:57,578 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:12:57,578 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:20:58,273 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OPEN_API
2017-03-03 11:20:58,275 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:21:07,923 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:21:07,936 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:21:07,953 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:21:07,971 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:21:07,978 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:21:10,038 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4349695718",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "621002199203037605",
      "insurantCertiType": "I",
      "insurantName": "投保人王文德",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "45122219970303910X",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:21:14,772 [pool-8-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:63] - 当前用例:OPEN_API接口类型异常,忽略,开始执行下一条
2017-03-03 11:24:49,853 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:24:54,698 [pool-8-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OPEN_API
2017-03-03 11:24:54,699 [pool-8-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:25:00,130 [pool-8-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:25:00,135 [pool-8-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:25:00,138 [pool-8-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:25:00,168 [pool-8-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:25:00,173 [pool-8-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:25:00,194 [pool-8-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2248743272",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "150702199203037300",
      "insurantCertiType": "I",
      "insurantName": "投保人张隽美",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "15090219970303166X",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:31:54,266 [pool-8-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:63] - 当前用例:OPEN_API接口类型异常,忽略,开始执行下一条
2017-03-03 11:31:54,268 [pool-8-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:31:59,283 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:31:59,285 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:32:01,075 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:32:01,079 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:32:01,080 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:32:01,087 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:32:01,089 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:32:01,094 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "8783449841",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "410203199203036001",
      "insurantCertiType": "I",
      "insurantName": "投保人粟智纯",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "222400199703031088",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:32:02,376 [pool-9-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:32:02,377 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:32:08,137 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:32:08,140 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:32:08,141 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:32:08,144 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:32:08,146 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:32:08,148 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4655523219",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "220521199203034544",
      "insurantCertiType": "I",
      "insurantName": "投保人王康泰",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "421125199703036281",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:32:11,010 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"222400199703031088\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"410203199203036001\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人粟智纯\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"8783449841\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:32:11,947 [pool-9-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:32:11,953 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:32:11,954 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:32:11,955 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend(\"TC002\",\"policyId\")]开始解析...
2017-03-03 11:32:11,956 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:32:31,627 [pool-9-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"421125199703036281\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"220521199203034544\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人王康泰\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"4655523219\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:32:31,777 [pool-9-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:32:31,778 [pool-9-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:32:31,779 [pool-9-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:32:31,780 [pool-9-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend(\"TC002\",\"policyId\")]开始解析...
2017-03-03 11:32:31,782 [pool-9-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:41:10,863 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:41:10,865 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:41:11,568 [pool-10-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:41:11,569 [pool-10-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:41:12,374 [pool-10-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:41:12,376 [pool-10-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:41:12,378 [pool-10-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:41:12,380 [pool-10-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:41:12,381 [pool-10-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:41:12,384 [pool-10-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3155765365",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "511922199203037962",
      "insurantCertiType": "I",
      "insurantName": "投保人王静枫",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "52262319970303674X",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:41:14,015 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:41:14,024 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:41:14,027 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:41:14,031 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:41:14,037 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:41:14,048 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "8791465413",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "530500199203034625",
      "insurantCertiType": "I",
      "insurantName": "投保人华清晖",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "330000199703032402",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:41:16,593 [pool-10-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"52262319970303674X\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"511922199203037962\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人王静枫\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"3155765365\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:41:16,722 [pool-10-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:41:16,724 [pool-10-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:41:16,725 [pool-10-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:41:16,725 [pool-10-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:41:18,575 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"330000199703032402\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"530500199203034625\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人华清晖\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"8791465413\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:41:18,692 [pool-10-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:41:18,693 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:41:18,694 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:41:18,695 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:43:02,734 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 10256 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-03 11:43:02,744 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-03 11:43:02,849 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Fri Mar 03 11:43:02 CST 2017]; root of context hierarchy
2017-03-03 11:43:03,177 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-03 11:43:05,043 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-03 11:43:06,280 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-03 11:43:06,307 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-03 11:43:06,309 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-03 11:43:06,582 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-03 11:43:06,582 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 3733 ms
2017-03-03 11:43:06,864 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-03 11:43:06,871 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-03 11:43:06,872 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-03 11:43:06,872 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-03 11:43:06,873 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-03 11:43:06,998 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-03 11:43:07,976 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Fri Mar 03 11:43:02 CST 2017]; root of context hierarchy
2017-03-03 11:43:08,083 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-03 11:43:08,085 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-03 11:43:08,085 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-03 11:43:08,086 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 11:43:08,086 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 11:43:08,086 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-03 11:43:08,090 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-03 11:43:08,090 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 11:43:08,091 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 11:43:08,091 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-03 11:43:08,092 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-03 11:43:08,093 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-03 11:43:08,093 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-03 11:43:08,097 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-03 11:43:08,098 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-03 11:43:08,136 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-03 11:43:08,137 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-03 11:43:08,137 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-03 11:43:08,138 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartservice] onto handler '/heartservice'
2017-03-03 11:43:08,161 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 11:43:08,162 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 11:43:08,225 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 11:43:08,682 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-03 11:43:08,701 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-03 11:43:08,720 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-03 11:43:08,743 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-03 11:43:08,779 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-03 11:43:08,819 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-03 11:43:08,828 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 6.618 seconds (JVM running for 7.734)
2017-03-03 11:45:04,085 [http-nio-9090-exec-10] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-03 11:45:04,085 [http-nio-9090-exec-10] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-03 11:45:04,119 [http-nio-9090-exec-10] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2017-03-03 11:45:04,212 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:45:04,212 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:45:04,227 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:45:04,227 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:45:04,301 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:45:04,302 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:45:04,364 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:45:04,364 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:45:04,370 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:45:04,372 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:45:04,397 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:45:04,398 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:45:04,415 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:45:04,418 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:45:04,421 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "7733127542",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "360923199203037425",
      "insurantCertiType": "I",
      "insurantName": "投保人张晓曼",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "522225199703034702",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:45:04,422 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1118825415",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "150922199203033947",
      "insurantCertiType": "I",
      "insurantName": "投保人张宏爽",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "130200199703037143",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:45:04,689 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"522225199703034702\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"360923199203037425\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人张晓曼\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"7733127542\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:45:04,690 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"130200199703037143\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"150922199203033947\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人张宏爽\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"1118825415\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:45:05,809 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:45:05,857 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:45:05,889 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:45:05,890 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:45:05,891 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:45:05,892 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:45:05,899 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:45:05,900 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:54:00,153 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:54:00,154 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:54:00,155 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:54:00,157 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:54:00,159 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:54:00,161 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:54:00,161 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:54:00,163 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "5557639166",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "650121199203030760",
      "insurantCertiType": "I",
      "insurantName": "投保人王月华",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "441500199703033126",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:54:00,163 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"441500199703033126\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"650121199203030760\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人王月华\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"5557639166\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:54:00,157 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 11:54:00,164 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:54:00,165 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 11:54:00,175 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 11:54:00,177 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 11:54:00,179 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 11:54:00,182 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 11:54:00,187 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1153319447",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "14112619920303422X",
      "insurantCertiType": "I",
      "insurantName": "投保人王鸿祯",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "542422199703036922",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 11:54:00,188 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"542422199703036922\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"14112619920303422X\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人王鸿祯\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"1153319447\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 11:54:00,402 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:54:00,405 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:54:00,409 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:54:00,410 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 11:54:00,526 [pool-3-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 11:54:00,528 [pool-3-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 11:54:00,529 [pool-3-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 11:54:00,530 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 13:52:39,169 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 11380 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-03 13:52:39,178 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-03 13:52:39,333 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Fri Mar 03 13:52:39 CST 2017]; root of context hierarchy
2017-03-03 13:52:39,616 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-03 13:52:42,231 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b62767b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-03 13:52:43,853 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-03 13:52:43,892 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-03 13:52:43,895 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-03 13:52:44,232 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-03 13:52:44,233 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4900 ms
2017-03-03 13:52:44,604 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-03 13:52:44,615 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-03 13:52:44,616 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-03 13:52:44,617 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-03 13:52:44,617 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-03 13:52:44,799 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-03 13:52:46,320 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Fri Mar 03 13:52:39 CST 2017]; root of context hierarchy
2017-03-03 13:52:46,510 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-03 13:52:46,512 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-03 13:52:46,514 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-03 13:52:46,514 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-03 13:52:46,515 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 13:52:46,516 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 13:52:46,522 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-03 13:52:46,523 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-03 13:52:46,524 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 13:52:46,525 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 13:52:46,525 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-03 13:52:46,526 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-03 13:52:46,527 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-03 13:52:46,535 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-03 13:52:46,536 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-03 13:52:46,598 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-03 13:52:46,599 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-03 13:52:46,599 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-03 13:52:46,600 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartservice] onto handler '/heartservice'
2017-03-03 13:52:46,628 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 13:52:46,629 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 13:52:46,729 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 13:52:47,579 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-03 13:52:47,603 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-03 13:52:47,631 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-03 13:52:47,668 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-03 13:52:47,699 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-03 13:52:47,774 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-03 13:52:47,781 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 9.369 seconds (JVM running for 11.025)
2017-03-03 13:53:32,560 [http-nio-9090-exec-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-03 13:53:32,561 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-03 13:53:32,601 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2017-03-03 13:53:51,167 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 13:53:51,194 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 13:54:06,377 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 13:54:06,380 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 13:54:07,821 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 13:54:07,859 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 13:54:07,862 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 13:54:07,882 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 13:54:07,894 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 13:54:07,897 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "2224384781",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "440184199203033060",
      "insurantCertiType": "I",
      "insurantName": "投保人张半双",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "411103199703032440",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 13:54:10,319 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 13:54:10,320 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 13:54:10,322 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 13:54:10,325 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 13:54:10,401 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 13:54:10,403 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3574743847",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "620825199203034823",
      "insurantCertiType": "I",
      "insurantName": "投保人张雅容",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "110106199703031023",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 14:22:31,414 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 19340 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-03 14:22:31,420 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-03 14:22:31,566 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Fri Mar 03 14:22:31 CST 2017]; root of context hierarchy
2017-03-03 14:22:31,892 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-03 14:22:33,998 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c6d83aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-03 14:22:35,099 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-03 14:22:35,124 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-03 14:22:35,127 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-03 14:22:35,380 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-03 14:22:35,380 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 3814 ms
2017-03-03 14:22:35,632 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-03 14:22:35,639 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-03 14:22:35,640 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-03 14:22:35,641 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-03 14:22:35,641 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-03 14:22:35,767 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-03 14:22:36,801 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7586beff: startup date [Fri Mar 03 14:22:31 CST 2017]; root of context hierarchy
2017-03-03 14:22:36,910 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-03 14:22:36,913 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-03 14:22:36,914 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-03 14:22:36,914 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 14:22:36,915 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 14:22:36,916 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-03 14:22:36,921 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-03 14:22:36,922 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-03 14:22:36,923 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-03 14:22:36,924 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-03 14:22:36,926 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-03 14:22:36,927 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-03 14:22:36,928 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-03 14:22:36,933 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-03 14:22:36,933 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-03 14:22:36,979 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-03 14:22:36,979 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-03 14:22:36,980 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-03 14:22:36,980 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartservice] onto handler '/heartservice'
2017-03-03 14:22:36,998 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 14:22:36,999 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 14:22:37,078 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-03 14:22:37,456 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-03 14:22:37,477 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-03 14:22:37,492 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-03 14:22:37,517 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-03 14:22:37,546 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-03 14:22:37,584 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-03 14:22:37,591 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 6.731 seconds (JVM running for 8.074)
2017-03-03 14:22:48,198 [http-nio-9090-exec-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-03 14:22:48,199 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-03 14:22:48,223 [http-nio-9090-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2017-03-03 14:22:48,299 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 14:22:48,300 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 14:22:48,313 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 14:22:48,313 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 14:22:48,390 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 14:22:48,390 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 14:22:48,452 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 14:22:48,455 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 14:22:48,460 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 14:22:48,462 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 14:22:48,496 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 14:22:48,496 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 14:22:48,509 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 14:22:48,509 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 14:22:48,512 [pool-2-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "6339653314",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "469024199203035365",
      "insurantCertiType": "I",
      "insurantName": "投保人鲜于幼安",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "440883199703039364",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 14:22:48,516 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "8293418412",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "542223199203038302",
      "insurantCertiType": "I",
      "insurantName": "投保人王丝琦",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "340322199703036282",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}
2017-03-03 14:22:48,912 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"440883199703039364\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"469024199203035365\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人鲜于幼安\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"6339653314\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 14:22:48,912 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"\"amount\": \"1000000\",":"","\"campaignId\": \"10002156338\",":"","\"effectiveDate\": \"20170304000000\",":"","\"holderBirthday\": \"\",":"","\"holderCertiNo\": \"340322199703036282\",":"","\"holderCertiType\": \"I\",":"","\"holderEmail\": \"yangxiaolin@zhongan.com\",":"","\"holderGender\": \"\",":"","\"holderName\": \"投保人王涵蓄\",":"","\"holderPhone\": \"18317183693\"":"","\"insurantBirthday\": \"\",":"","\"insurantCertiNo\": \"542223199203038302\",":"","\"insurantCertiType\": \"I\",":"","\"insurantGender\": \"\",":"","\"insurantList\": [":"","\"insurantName\": \"投保人王丝琦\",":"","\"insurantPhone\": \"18317183693\",":"","\"insurantUnit\": \"1\"":"","\"insuredId\": \"8293418412\",":"","\"insuredRelaToHolder\": \"3\",":"","\"isMedicare\": \"Y\",":"","\"packageId\": \"51252513\",":"","\"policyHolder\": {":"","\"premium\": \"219.00\",":"","],":"","infoJson":"{","{":"","}":""}
2017-03-03 14:22:49,652 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 14:22:49,654 [pool-2-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1001\",\"msgInfo\":\"syntax error\"}"}
2017-03-03 14:22:49,669 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 14:22:49,671 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 14:22:49,675 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1001==1
2017-03-03 14:22:49,676 [pool-2-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - syntax error>>保单信息验证成功
2017-03-03 14:22:49,690 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 14:22:49,694 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 14:25:05,712 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 14:25:05,713 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-03 14:25:05,714 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 14:25:05,715 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 14:25:05,717 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 14:25:05,718 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 14:25:05,719 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 14:25:05,722 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1486241726",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "15010519920303312X",
      "insurantCertiType": "I",
      "insurantName": "投保人张振强",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "140524199703031349",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-03 14:25:05,722 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"1486241726\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170304000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"15010519920303312X\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张振强\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"140524199703031349\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-03 14:25:05,727 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-03 14:25:05,728 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-03 14:25:05,728 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-03 14:25:05,729 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-03 14:25:05,730 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-03 14:25:05,732 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-03 14:25:05,737 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-03 14:25:05,744 [pool-3-thread-2] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "5332297461",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170304000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "610800199203036520",
      "insurantCertiType": "I",
      "insurantName": "投保人浦佳晨",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "653100199703030346",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-03 14:25:05,745 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"5332297461\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170304000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"610800199203036520\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人浦佳晨\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"653100199703030346\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-03 14:25:06,240 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"12000037098\",\"insuredId\":\"1486241726\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-03 14:25:06,244 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-03 14:25:06,246 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-03 14:25:06,246 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 14:25:06,264 [pool-3-thread-2] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"12000037099\",\"insuredId\":\"5332297461\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-03 14:25:06,266 [pool-3-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-03 14:25:06,267 [pool-3-thread-2] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-03 14:25:06,267 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-03 14:30:42,805 [http-nio-9090-exec-7] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-03 14:30:42:042
2017-03-03 14:30:42,806 [http-nio-9090-exec-7] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@2efb9e41]请求开始执行接入
2017-03-03 14:30:42,810 [http-nio-9090-exec-7] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@2efb9e41]请求开始执行结束
2017-03-03 14:30:42,811 [http-nio-9090-exec-7] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-03 14:30:42:042
2017-03-03 14:30:42,817 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC001,接口类型: HSF
2017-03-03 14:30:42,817 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
[{"userId":4165025}]
2017-03-03 14:30:42,819 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
[{"userId":4165025}]
2017-03-03 14:30:42,819 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:126] - 接口访问地址: http://10.139.34.119:8086/com.zhongan.core.user.service.CusCompanyService:1.0.0/findListByCondition
2017-03-03 14:30:43,028 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:135] - bizcontent: {"errorDescription":"","errorMessage":"","success":true,"value":[{"companyType":201,"creditCode":"33042119790408027X1","cusCompanyContactAddressDTOs":[{"addressDetail":"纳格兰9","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":10004,"isDeleted":"N","modifier":"system","userId":4165025}],"cusCompanyContactDTOs":[{"contactDepartment":"燃烧军团29","contactPeople":"古尔丹29","contactPost":"军团总指挥29","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":20004,"isDeleted":"N","modifier":"system","userId":4165025}],"id":2470018,"isSmallMicroEnt":"N","legal":"空空5","licenseNo":"Y09098765435","userId":4165025,"userName":"空空导弹5"}]}

2017-03-03 14:30:43,029 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC001---------
2017-03-03 14:30:43,029 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-03 14:30:43,030 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-06 11:09:59,958 [http-nio-9090-exec-282] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-06 11:09:59:059
2017-03-06 11:09:59,970 [http-nio-9090-exec-282] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@383a0f3c]请求开始执行接入
2017-03-06 11:09:59,971 [http-nio-9090-exec-282] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@383a0f3c]请求开始执行结束
2017-03-06 11:09:59,971 [http-nio-9090-exec-282] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-06 11:09:59:059
2017-03-06 11:09:59,972 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC001,接口类型: HSF
2017-03-06 11:09:59,972 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
[{"userId":4165025}]
2017-03-06 11:09:59,973 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
[{"userId":4165025}]
2017-03-06 11:09:59,974 [pool-6-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:126] - 接口访问地址: http://10.139.34.119:8086/com.zhongan.core.user.service.CusCompanyService:1.0.0/findListByCondition
2017-03-06 11:10:00,013 [pool-6-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:135] - bizcontent: {"errorDescription":"","errorMessage":"","success":true,"value":[{"companyType":201,"creditCode":"33042119790408027X1","cusCompanyContactAddressDTOs":[{"addressDetail":"纳格兰9","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":10004,"isDeleted":"N","modifier":"system","userId":4165025}],"cusCompanyContactDTOs":[{"contactDepartment":"燃烧军团29","contactPeople":"古尔丹29","contactPost":"军团总指挥29","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":20004,"isDeleted":"N","modifier":"system","userId":4165025}],"id":2470018,"isSmallMicroEnt":"N","legal":"空空5","licenseNo":"Y09098765435","userId":4165025,"userName":"空空导弹5"}]}

2017-03-06 11:10:00,014 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC001---------
2017-03-06 11:10:00,014 [Thread-29] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-06 11:10:00,016 [Thread-29] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-06 11:13:08,167 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-06 11:13:08:008
2017-03-06 11:13:08,167 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@354777f9]请求开始执行接入
2017-03-06 11:13:08,168 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@354777f9]请求开始执行结束
2017-03-06 11:13:08,168 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-06 11:13:08:008
2017-03-06 11:13:08,169 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC001,接口类型: HSF
2017-03-06 11:13:08,169 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
[{"userId":4165025}]
2017-03-06 11:13:08,170 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
[{"userId":4165025}]
2017-03-06 11:13:08,170 [pool-7-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:126] - 接口访问地址: http://10.139.34.119:8086/com.zhongan.core.user.service.CusCompanyService:1.0.0/findListByCondition
2017-03-06 11:13:08,194 [pool-7-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:135] - bizcontent: {"errorDescription":"","errorMessage":"","success":true,"value":[{"companyType":201,"creditCode":"33042119790408027X1","cusCompanyContactAddressDTOs":[{"addressDetail":"纳格兰9","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":10004,"isDeleted":"N","modifier":"system","userId":4165025}],"cusCompanyContactDTOs":[{"contactDepartment":"燃烧军团29","contactPeople":"古尔丹29","contactPost":"军团总指挥29","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":20004,"isDeleted":"N","modifier":"system","userId":4165025}],"id":2470018,"isSmallMicroEnt":"N","legal":"空空5","licenseNo":"Y09098765435","userId":4165025,"userName":"空空导弹5"}]}

2017-03-06 11:13:08,195 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC001---------
2017-03-06 11:13:08,195 [Thread-30] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-06 11:13:08,195 [Thread-30] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-06 11:15:32,954 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-06 11:15:32:032
2017-03-06 11:15:32,955 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@1b19bdfb]请求开始执行接入
2017-03-06 11:15:32,956 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@1b19bdfb]请求开始执行结束
2017-03-06 11:15:32,956 [http-nio-9090-exec-244] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-06 11:15:32:032
2017-03-06 11:15:32,956 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC001,接口类型: HSF
2017-03-06 11:15:32,956 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
[{"userId":4165025}]
2017-03-06 11:15:32,957 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
[{"userId":4165025}]
2017-03-06 11:15:32,958 [pool-8-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:126] - 接口访问地址: http://10.139.34.119:8086/com.zhongan.core.user.service.CusCompanyService:1.0.0/findListByCondition
2017-03-06 11:15:39,941 [pool-8-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:135] - bizcontent: {"errorDescription":"","errorMessage":"","success":true,"value":[{"companyType":201,"creditCode":"33042119790408027X1","cusCompanyContactAddressDTOs":[{"addressDetail":"纳格兰9","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":10004,"isDeleted":"N","modifier":"system","userId":4165025}],"cusCompanyContactDTOs":[{"contactDepartment":"燃烧军团29","contactPeople":"古尔丹29","contactPost":"军团总指挥29","creator":"system","gmtCreated":1473669390000,"gmtModified":1473669390000,"id":20004,"isDeleted":"N","modifier":"system","userId":4165025}],"id":2470018,"isSmallMicroEnt":"N","legal":"空空5","licenseNo":"Y09098765435","userId":4165025,"userName":"空空导弹5"}]}

2017-03-06 11:15:39,941 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC001---------
2017-03-06 11:15:39,942 [Thread-31] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-06 11:15:39,942 [Thread-31] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-06 17:01:03,047 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 21920 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-06 17:01:03,106 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-06 17:01:03,271 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Mon Mar 06 17:01:03 CST 2017]; root of context hierarchy
2017-03-06 17:01:03,566 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-06 17:01:05,909 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c160edf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-06 17:01:07,166 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-06 17:01:07,193 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-06 17:01:07,195 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-06 17:01:07,470 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-06 17:01:07,471 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4200 ms
2017-03-06 17:01:07,844 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-06 17:01:07,857 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-06 17:01:07,858 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-06 17:01:07,859 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-06 17:01:07,859 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-06 17:01:08,019 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-06 17:01:09,664 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Mon Mar 06 17:01:03 CST 2017]; root of context hierarchy
2017-03-06 17:01:09,809 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-06 17:01:09,811 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-06 17:01:09,812 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-06 17:01:09,813 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-06 17:01:09,814 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-06 17:01:09,815 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-06 17:01:09,819 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-06 17:01:09,820 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-06 17:01:09,820 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-06 17:01:09,822 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-06 17:01:09,823 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-06 17:01:09,824 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-06 17:01:09,825 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-06 17:01:09,831 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-06 17:01:09,832 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-06 17:01:09,876 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-06 17:01:09,876 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-06 17:01:09,877 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-06 17:01:09,877 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-06 17:01:09,903 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:01:09,903 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:01:10,006 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:01:10,698 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-06 17:01:10,719 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-06 17:01:10,740 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-06 17:01:10,783 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-06 17:01:10,820 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-9090"]
2017-03-06 17:01:10,821 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Stopping service Tomcat
2017-03-06 17:01:10,871 [main] INFO  [org.apache.catalina.util.LifecycleBase] [DirectJDKLog.java:179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2017-03-06 17:01:10,872 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-9090"]
2017-03-06 17:01:10,873 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-9090"]
2017-03-06 17:01:10,880 [main] INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer] [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report enable debug logging (start with --debug)


2017-03-06 17:01:10,907 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:982] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b02722: startup date [Mon Mar 06 17:01:03 CST 2017]; root of context hierarchy
2017-03-06 17:01:10,909 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2017-03-06 17:01:59,029 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 22344 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-06 17:01:59,040 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-06 17:01:59,288 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528c868: startup date [Mon Mar 06 17:01:59 CST 2017]; root of context hierarchy
2017-03-06 17:01:59,396 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-06 17:02:01,877 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8d12391d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-06 17:02:03,257 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-06 17:02:03,285 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-06 17:02:03,288 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-06 17:02:03,521 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-06 17:02:03,522 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4233 ms
2017-03-06 17:02:03,863 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-06 17:02:03,872 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-06 17:02:03,873 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-06 17:02:03,874 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-06 17:02:03,874 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-06 17:02:04,025 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-06 17:02:05,256 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528c868: startup date [Mon Mar 06 17:01:59 CST 2017]; root of context hierarchy
2017-03-06 17:02:05,423 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-06 17:02:05,426 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-06 17:02:05,427 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-06 17:02:05,427 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-06 17:02:05,428 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-06 17:02:05,429 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-06 17:02:05,438 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-06 17:02:05,439 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-06 17:02:05,439 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-06 17:02:05,440 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-06 17:02:05,440 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-06 17:02:05,441 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-06 17:02:05,442 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-06 17:02:05,453 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-06 17:02:05,455 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-06 17:02:05,510 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-06 17:02:05,511 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-06 17:02:05,511 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-06 17:02:05,511 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-06 17:02:05,539 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:02:05,540 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:02:05,640 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:02:06,306 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-06 17:02:06,327 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-06 17:02:06,351 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-06 17:02:06,387 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-06 17:02:06,435 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-06 17:02:06,506 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-06 17:02:06,518 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 8.246 seconds (JVM running for 9.797)
2017-03-06 17:11:23,137 [http-nio-9090-exec-7] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-06 17:11:23,137 [http-nio-9090-exec-7] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-06 17:11:23,178 [http-nio-9090-exec-7] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2017-03-06 17:11:58,081 [http-nio-9090-exec-10] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-06 17:11:58:058
2017-03-06 17:12:03,278 [http-nio-9090-exec-10] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@2751f834]请求开始执行接入
2017-03-06 17:12:04,204 [http-nio-9090-exec-10] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@2751f834]请求开始执行结束
2017-03-06 17:12:05,713 [http-nio-9090-exec-10] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-06 17:12:05:005
2017-03-06 17:12:12,077 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC001,接口类型: HSF
2017-03-06 17:12:12,105 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
[{"userId":4165025}]
2017-03-06 17:12:12,970 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
[{"userId":4165025}]
2017-03-06 17:12:14,426 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:126] - 接口访问地址: http://10.139.34.119:8086/com.zhongan.core.user.service.CusCompanyService:1.0.0/findListByCondition
2017-03-06 17:12:35,980 [pool-2-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:439] - I/O exception (java.net.ConnectException) caught when processing request: Connection timed out: connect
2017-03-06 17:12:35,980 [pool-2-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:445] - Retrying request
2017-03-06 17:12:56,986 [pool-2-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:439] - I/O exception (java.net.ConnectException) caught when processing request: Connection timed out: connect
2017-03-06 17:12:56,986 [pool-2-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:445] - Retrying request
2017-03-06 17:13:17,985 [pool-2-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:439] - I/O exception (java.net.ConnectException) caught when processing request: Connection timed out: connect
2017-03-06 17:13:17,987 [pool-2-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:445] - Retrying request
2017-03-06 17:13:39,003 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:135] - bizcontent: error
2017-03-06 17:13:39,010 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC001---------
2017-03-06 17:13:39,010 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-06 17:13:39,011 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-06 17:13:59,342 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:48] - Starting Application on JUJINXIN with PID 22940 (D:\workspace\za-apt-agent\target\classes started by jujinxin in D:\workspace\za-apt-agent)
2017-03-06 17:13:59,349 [main] INFO  [com.za.qa.Application] [SpringApplication.java:659] - No active profile set, falling back to default profiles: default
2017-03-06 17:13:59,467 [main] INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] [AbstractApplicationContext.java:581] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Mon Mar 06 17:13:59 CST 2017]; root of context hierarchy
2017-03-06 17:13:59,771 [background-preinit] INFO  [org.hibernate.validator.internal.util.Version] [Version.java:30] - HV000001: Hibernate Validator 5.2.4.Final
2017-03-06 17:14:01,954 [main] INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [PostProcessorRegistrationDelegate.java:328] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8b17d4b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-03-06 17:14:03,406 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:88] - Tomcat initialized with port(s): 9090 (http)
2017-03-06 17:14:03,428 [main] INFO  [org.apache.catalina.core.StandardService] [DirectJDKLog.java:179] - Starting service Tomcat
2017-03-06 17:14:03,430 [main] INFO  [org.apache.catalina.core.StandardEngine] [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.4
2017-03-06 17:14:03,694 [localhost-startStop-1] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2017-03-06 17:14:03,695 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4228 ms
2017-03-06 17:14:04,005 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean] [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2017-03-06 17:14:04,012 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-03-06 17:14:04,013 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-03-06 17:14:04,013 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-03-06 17:14:04,014 [localhost-startStop-1] INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean] [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2017-03-06 17:14:04,154 [main] INFO  [com.za.qa.common.BatisConfiguration] [BatisConfiguration.java:23] - 注册MyBatis分页插件PageHelper
2017-03-06 17:14:05,285 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@466276d8: startup date [Mon Mar 06 17:13:59 CST 2017]; root of context hierarchy
2017-03-06 17:14:05,444 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/login/{name}&{pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.login(java.lang.String,java.lang.String)
2017-03-06 17:14:05,446 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByPost(java.lang.String,java.lang.String)
2017-03-06 17:14:05,447 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.ConfigurationController.loginByGet(java.lang.String,java.lang.String)
2017-03-06 17:14:05,448 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/{iTest}],methods=[GET]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration(java.lang.String)
2017-03-06 17:14:05,448 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest2],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration2(java.lang.String)
2017-03-06 17:14:05,449 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configuration/iTest3],methods=[POST]}" onto public java.util.List<com.za.qa.domain.dto.Configuration> com.za.qa.controller.ConfigurationController.findconfiguration3(com.za.qa.domain.dto.Configuration)
2017-03-06 17:14:05,454 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/home]}" onto public java.lang.String com.za.qa.controller.LoginController.home()
2017-03-06 17:14:05,455 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/login?name={name}&pwd={pwd}],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.login(java.lang.String,java.lang.String)
2017-03-06 17:14:05,457 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost(java.lang.String,java.lang.String)
2017-03-06 17:14:05,459 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbyget],methods=[GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByGet(java.lang.String,java.lang.String)
2017-03-06 17:14:05,460 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/testpost],methods=[POST]}" onto public java.lang.String com.za.qa.controller.LoginController.testpost()
2017-03-06 17:14:05,461 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost1],methods=[POST || GET]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost1(com.za.qa.domain.dto.User)
2017-03-06 17:14:05,462 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loginbypost2],methods=[POST || GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.za.qa.controller.LoginController.loginByPost2(com.za.qa.domain.dto.User)
2017-03-06 17:14:05,467 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-03-06 17:14:05,468 [main] INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-03-06 17:14:05,534 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/coreAPIservice] onto handler '/coreAPIservice'
2017-03-06 17:14:05,536 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/debugcoreAPIservice] onto handler '/debugcoreAPIservice'
2017-03-06 17:14:05,536 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/executeAPIservice] onto handler '/executeAPIservice'
2017-03-06 17:14:05,537 [main] INFO  [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/heartService] onto handler '/heartService'
2017-03-06 17:14:05,564 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:14:05,564 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:14:05,663 [main] INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] [AbstractUrlHandlerMapping.java:354] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-03-06 17:14:06,343 [main] INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2017-03-06 17:14:06,364 [main] INFO  [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor] [ScheduledAnnotationBeanPostProcessor.java:244] - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2017-03-06 17:14:06,386 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-9090"]
2017-03-06 17:14:06,426 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] [DirectJDKLog.java:179] - Starting ProtocolHandler [http-nio-9090]
2017-03-06 17:14:06,462 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2017-03-06 17:14:06,515 [main] INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] [TomcatEmbeddedServletContainer.java:186] - Tomcat started on port(s): 9090 (http)
2017-03-06 17:14:06,524 [main] INFO  [com.za.qa.Application] [StartupInfoLogger.java:57] - Started Application in 7.782 seconds (JVM running for 8.873)
2017-03-06 17:23:30,478 [http-nio-9090-exec-21] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-03-06 17:23:30,479 [http-nio-9090-exec-21] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2017-03-06 17:23:30,524 [http-nio-9090-exec-21] INFO  [org.springframework.web.servlet.DispatcherServlet] [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2017-03-06 17:31:46,610 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 17:31:46,647 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:31:51,453 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 17:31:51,518 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 17:31:51,524 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 17:31:51,720 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 17:31:51,738 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 17:31:51,740 [pool-2-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "9798213162",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "510108199203067502",
      "insurantCertiType": "I",
      "insurantName": "投保人农承颜",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "150123199703063723",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:31:53,462 [pool-2-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 17:31:56,694 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 17:31:56,696 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:31:58,365 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 17:31:58,369 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 17:31:58,387 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 17:31:58,390 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 17:31:58,391 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 17:31:58,393 [pool-2-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "1213283761",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "350300199203060642",
      "insurantCertiType": "I",
      "insurantName": "投保人王筠溪",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "340104199703065645",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:32:02,216 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"9798213162\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"510108199203067502\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人农承颜\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"150123199703063723\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 17:32:05,647 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"1213283761\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"350300199203060642\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王筠溪\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"340104199703065645\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 17:32:05,997 [pool-2-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {}
2017-03-06 17:32:06,049 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - msgCode==1
2017-03-06 17:32:06,050 [pool-2-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - msgInfo>>保单信息验证成功
2017-03-06 17:32:06,055 [pool-2-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 17:32:06,061 [http-nio-9090-exec-21] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-06 17:32:08,670 [pool-2-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {}
2017-03-06 17:32:08,671 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - msgCode==1
2017-03-06 17:32:08,672 [pool-2-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - msgInfo>>保单信息验证成功
2017-03-06 17:32:08,673 [pool-2-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 17:35:59,233 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 17:35:59,236 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:36:22,942 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 17:36:22,953 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 17:36:22,963 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 17:36:22,974 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 17:36:22,982 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 17:36:25,951 [pool-3-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3418639244",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "411002199203066183",
      "insurantCertiType": "I",
      "insurantName": "投保人张依白",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "532932199703066601",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:38:07,574 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"3418639244\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"411002199203066183\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张依白\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"532932199703066601\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 17:41:19,064 [pool-3-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {}
2017-03-06 17:41:19,065 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - msgCode==1
2017-03-06 17:41:19,065 [pool-3-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - msgInfo>>保单信息验证成功
2017-03-06 17:41:19,066 [pool-3-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 17:41:21,614 [pool-3-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 17:41:21,616 [http-nio-9090-exec-7] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-06 17:41:22,830 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 17:41:22,830 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:41:23,687 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 17:41:23,694 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 17:41:23,702 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 17:41:23,711 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 17:41:23,715 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 17:41:23,720 [pool-3-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "9748887843",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "140200199203068340",
      "insurantCertiType": "I",
      "insurantName": "投保人张烨霖",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "500103199703068583",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 17:41:27,592 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"9748887843\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"140200199203068340\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张烨霖\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"500103199703068583\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 17:41:30,619 [pool-3-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {}
2017-03-06 17:41:30,619 [pool-3-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - msgCode==1
2017-03-06 17:41:30,620 [pool-3-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - msgInfo>>保单信息验证成功
2017-03-06 17:41:30,620 [pool-3-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 17:41:39,449 [http-nio-9090-exec-13] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-06 17:41:39:039
2017-03-06 17:41:46,476 [http-nio-9090-exec-13] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@7dec1cea]请求开始执行接入
2017-03-06 17:41:47,719 [http-nio-9090-exec-13] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@7dec1cea]请求开始执行结束
2017-03-06 17:41:49,127 [http-nio-9090-exec-13] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-06 17:41:49:049
2017-03-06 17:41:54,342 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC001,接口类型: HSF
2017-03-06 17:41:54,343 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
[{"userId":4165025}]
2017-03-06 17:41:55,469 [pool-4-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
[{"userId":4165025}]
2017-03-06 17:41:57,973 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:126] - 接口访问地址: http://10.139.34.119:8086/com.zhongan.core.user.service.CusCompanyService:1.0.0/findListByCondition
2017-03-06 17:42:19,106 [pool-4-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:439] - I/O exception (java.net.ConnectException) caught when processing request: Connection timed out: connect
2017-03-06 17:42:19,109 [pool-4-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:445] - Retrying request
2017-03-06 17:42:40,110 [pool-4-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:439] - I/O exception (java.net.ConnectException) caught when processing request: Connection timed out: connect
2017-03-06 17:42:40,111 [pool-4-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:445] - Retrying request
2017-03-06 17:43:01,125 [pool-4-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:439] - I/O exception (java.net.ConnectException) caught when processing request: Connection timed out: connect
2017-03-06 17:43:01,125 [pool-4-thread-1] INFO  [org.apache.commons.httpclient.HttpMethodDirector] [HttpMethodDirector.java:445] - Retrying request
2017-03-06 17:43:22,123 [pool-4-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:135] - bizcontent: error
2017-03-06 17:43:22,124 [pool-4-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC001---------
2017-03-06 17:43:22,124 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-06 17:43:22,125 [Thread-3] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-06 17:57:52,016 [http-nio-9090-exec-20] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:31] - 开始执行测试用例2017-03-06 17:57:52:052
2017-03-06 17:57:59,880 [http-nio-9090-exec-20] INFO  [com.za.qa.domain.services.Host] [Host.java:24] - [com.za.qa.model.CombineData@42b7d8d]请求开始执行接入
2017-03-06 17:58:01,192 [http-nio-9090-exec-20] INFO  [com.za.qa.domain.services.Host] [Host.java:44] - [com.za.qa.model.CombineData@42b7d8d]请求开始执行结束
2017-03-06 17:58:02,041 [http-nio-9090-exec-20] INFO  [com.za.qa.domain.services.ExecuteServiceImpl] [ExecuteServiceImpl.java:35] - 开始执行测试用例结束2017-03-06 17:58:02:002
2017-03-06 17:58:05,680 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 17:58:05,682 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 17:58:06,359 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 17:58:06,360 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 17:58:06,360 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 17:58:06,361 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 17:58:06,369 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 17:58:06,370 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 17:58:06,371 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 17:58:06,372 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 17:58:06,374 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 17:58:06,380 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "8952248286","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "320305199203063647","insurantCertiType": "I", "insurantName": "投保人张春海","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "420102199703063188","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15608023251"}}
2017-03-06 17:58:25,944 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"8952248286\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"320305199203063647\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张春海\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"420102199703063188\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15608023251\"}}"}
2017-03-06 17:58:26,456 [pool-5-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"12000049990\",\"insuredId\":\"8952248286\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 17:58:26,461 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 17:58:26,465 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 17:58:26,466 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 17:59:48,000 [pool-5-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 17:59:48,005 [pool-5-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 12000049990==12000049990
2017-03-06 17:59:48,006 [pool-5-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 17:59:48,006 [Thread-5] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:32] - 当前任务接口测试结束
2017-03-06 17:59:48,007 [Thread-5] INFO  [com.za.qa.domain.services.FutureReport] [FutureReport.java:48] - 测试完成，发出测试报告数据
2017-03-06 18:00:20,454 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:00:20,456 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:00:26,606 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:00:26,611 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:00:26,616 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:00:26,625 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:00:26,630 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:00:26,656 [pool-6-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "3177616262",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "371522199203064321",
      "insurantCertiType": "I",
      "insurantName": "投保人张淑静",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "110109199703063403",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:00:31,456 [pool-6-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:00:35,501 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:00:35,502 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:00:47,763 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"3177616262\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"371522199203064321\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张淑静\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"110109199703063403\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 18:01:45,806 [pool-6-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"12000050000\",\"insuredId\":\"3177616262\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:01:48,573 [pool-6-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:01:48,575 [pool-6-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:01:48,575 [pool-6-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 18:01:48,578 [http-nio-9090-exec-17] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-06 18:02:25,512 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:02:25,523 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:02:25,526 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:02:25,532 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:02:25,543 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:02:25,545 [pool-6-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "5464285148",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "360781199203068929",
      "insurantCertiType": "I",
      "insurantName": "投保人张从珊",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "411326199703064544",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:02:58,904 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"5464285148\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"360781199203068929\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人张从珊\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"411326199703064544\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 18:03:22,435 [pool-6-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030003\",\"insuredId\":\"5464285148\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:10:07,187 [pool-6-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:10:07,204 [pool-6-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:17:19,535 [pool-6-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 18:20:19,264 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:20:19,264 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:20:21,135 [pool-7-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:20:43,778 [pool-7-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:20:43,778 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:20:44,808 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:20:44,812 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:20:44,821 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:20:44,827 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:20:44,829 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:20:44,833 [pool-7-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4421788414",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "530627199203069321",
      "insurantCertiType": "I",
      "insurantName": "投保人闻人宛曼",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "320104199703063662",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:20:45,626 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:20:45,629 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:20:45,636 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:20:45,643 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:20:45,659 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:20:45,661 [pool-7-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4737927441",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "211324199203060205",
      "insurantCertiType": "I",
      "insurantName": "投保人势波鸿",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "532323199703067402",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:20:50,683 [pool-7-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"4737927441\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"211324199203060205\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人势波鸿\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"532323199703067402\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 18:20:56,327 [pool-7-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030057\",\"insuredId\":\"4737927441\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:21:03,997 [pool-7-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:21:04,000 [pool-7-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:21:07,748 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"4421788414\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"530627199203069321\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人闻人宛曼\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"320104199703063662\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 18:21:18,878 [pool-7-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 18:21:40,260 [pool-7-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030059\",\"insuredId\":\"4421788414\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:21:53,210 [pool-7-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:21:53,214 [pool-7-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:21:55,389 [pool-7-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 18:22:21,359 [http-nio-9090-exec-17] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-06 18:27:31,036 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:27:31,036 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:29:11,796 [pool-8-thread-2] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:30:00,972 [pool-8-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:null,接口类型: OpenAPI
2017-03-06 18:30:00,977 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={
  "insuredId": "@RNum("10")",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "@RDate("yyyyMMdd","0/0/1")000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")",
      "insurantCertiType": "I",
      "insurantName": "投保人@RName()",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:31:28,306 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:31:28,309 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:31:28,310 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:31:28,311 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:31:28,312 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:31:28,313 [pool-8-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "5348464461",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "451321199203064420",
      "insurantCertiType": "I",
      "insurantName": "投保人王安荷",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "632600199703066149",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:31:29,087 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:31:29,088 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:31:29,089 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:31:29,091 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:31:29,091 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:31:29,093 [pool-8-thread-3] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={
  "insuredId": "4747923728",
  "campaignId": "10002156338",
  "packageId": "51252513",
  "effectiveDate": "20170307000000",
  "insurantList": [
    {
      "amount": "1000000",
      "insurantGender": "",
      "insurantBirthday": "",
      "insurantCertiNo": "620421199203069607",
      "insurantCertiType": "I",
      "insurantName": "投保人王俊悟",
      "insurantPhone": "18317183693",
      "insuredRelaToHolder": "3",
      "premium": "219.00",
      "isMedicare": "Y",
      "insurantUnit": "1"
    }
  ],
  "policyHolder": {
    "holderGender": "",
    "holderBirthday": "",
    "holderCertiNo": "542500199703067988",
    "holderCertiType": "I",
    "holderName": "投保人王涵蓄",
    "holderEmail": "yangxiaolin@zhongan.com",
    "holderPhone": "18317183693"
  }
}|
2017-03-06 18:31:31,135 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"5348464461\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"451321199203064420\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王安荷\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"632600199703066149\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 18:31:31,668 [pool-8-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\n  \"insuredId\": \"4747923728\",\n  \"campaignId\": \"10002156338\",\n  \"packageId\": \"51252513\",\n  \"effectiveDate\": \"20170307000000\",\n  \"insurantList\": [\n    {\n      \"amount\": \"1000000\",\n      \"insurantGender\": \"\",\n      \"insurantBirthday\": \"\",\n      \"insurantCertiNo\": \"620421199203069607\",\n      \"insurantCertiType\": \"I\",\n      \"insurantName\": \"投保人王俊悟\",\n      \"insurantPhone\": \"18317183693\",\n      \"insuredRelaToHolder\": \"3\",\n      \"premium\": \"219.00\",\n      \"isMedicare\": \"Y\",\n      \"insurantUnit\": \"1\"\n    }\n  ],\n  \"policyHolder\": {\n    \"holderGender\": \"\",\n    \"holderBirthday\": \"\",\n    \"holderCertiNo\": \"542500199703067988\",\n    \"holderCertiType\": \"I\",\n    \"holderName\": \"投保人王涵蓄\",\n    \"holderEmail\": \"yangxiaolin@zhongan.com\",\n    \"holderPhone\": \"18317183693\"\n  }\n}"}
2017-03-06 18:31:31,695 [pool-8-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030109\",\"insuredId\":\"5348464461\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:31:32,135 [pool-8-thread-3] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030110\",\"insuredId\":\"4747923728\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:31:33,523 [pool-8-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:31:33,526 [pool-8-thread-3] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:31:33,527 [pool-8-thread-3] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 18:31:33,943 [pool-8-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:31:33,949 [pool-8-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:31:33,950 [pool-8-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:null---------
2017-03-06 18:31:33,951 [http-nio-9090-exec-17] INFO  [org.springframework.remoting.support.RemoteInvocationTraceInterceptor] [RemoteInvocationTraceInterceptor.java:94] - Processing of HessianServiceExporter remote call resulted in exception: com.za.qa.domain.services.CoreService.execute
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.FutureTask.report(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at com.za.qa.domain.services.CoreServiceImpl.execute(CoreServiceImpl.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:78)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:302)
	at com.caucho.hessian.server.HessianSkeleton.invoke(HessianSkeleton.java:217)
	at org.springframework.remoting.caucho.HessianExporter.doInvoke(HessianExporter.java:223)
	at org.springframework.remoting.caucho.HessianExporter.invoke(HessianExporter.java:138)
	at org.springframework.remoting.caucho.HessianServiceExporter.handleRequest(HessianServiceExporter.java:66)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:522)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:1110)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:785)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1425)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NullPointerException: null
	at com.za.qa.domain.processor.Proprocessor.doProprocessor(Proprocessor.java:26)
	at com.za.qa.domain.dto.CaseDTO.getCaseBeforeRunDTO(CaseDTO.java:35)
	at com.za.qa.domain.core.RunClient.runsuite(RunClient.java:39)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:26)
	at com.za.qa.domain.core.CoreCallable.call(CoreCallable.java:15)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
2017-03-06 18:39:49,783 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:39:49,783 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:39:50,189 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:39:50,190 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:39:50,190 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:39:50,191 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:39:50,192 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:39:50,194 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:39:50,196 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:39:50,198 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:39:50,199 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:39:50,201 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "5472549421","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "140724199203069763","insurantCertiType": "I", "insurantName": "投保人大佩兰","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "440402199703064965","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15201751047"}}
2017-03-06 18:39:51,366 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"5472549421\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"140724199203069763\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人大佩兰\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"440402199703064965\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15201751047\"}}"}
2017-03-06 18:39:51,791 [pool-9-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030118\",\"insuredId\":\"5472549421\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:39:51,981 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:39:51,984 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:39:51,985 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:39:53,885 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:39:53,889 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030118==27030118
2017-03-06 18:39:53,891 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 18:39:53,891 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:39:53,891 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:39:54,600 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:39:54,601 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:39:54,601 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:39:54,602 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:39:54,603 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:39:54,606 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:39:54,610 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:39:54,613 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:39:54,615 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:39:54,618 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "9589675781","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "433124199203068786","insurantCertiType": "I", "insurantName": "投保人张慧丽","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "370923199703061781","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15201590442"}}
2017-03-06 18:39:56,491 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"9589675781\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"433124199203068786\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张慧丽\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"370923199703061781\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15201590442\"}}"}
2017-03-06 18:39:56,934 [pool-9-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030119\",\"insuredId\":\"9589675781\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:39:57,427 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:39:57,430 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:39:57,431 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:39:58,866 [pool-9-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:39:58,875 [pool-9-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030119==27030119
2017-03-06 18:39:58,877 [pool-9-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 18:41:46,122 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:41:46,123 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:41:49,207 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:41:49,207 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:41:49,207 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:41:49,208 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:41:49,212 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:41:49,214 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:41:49,215 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:41:49,216 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:41:49,224 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:41:49,225 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "5983133494","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "632128199203062140","insurantCertiType": "I", "insurantName": "投保人王欣彤","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "210400199703062980","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13805645876"}}
2017-03-06 18:41:54,450 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"5983133494\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"632128199203062140\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王欣彤\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"210400199703062980\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13805645876\"}}"}
2017-03-06 18:41:54,894 [pool-10-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030121\",\"insuredId\":\"5983133494\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:41:54,904 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:41:54,912 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:41:54,914 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:42:02,434 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:42:02,436 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030121==27030121
2017-03-06 18:42:02,436 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 18:42:02,436 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:42:02,436 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:42:02,437 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:42:02,437 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:42:02,437 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:42:02,443 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:42:02,451 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:42:02,457 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:42:02,459 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:42:02,460 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:42:02,462 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:42:02,464 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "2136458155","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "34100019920306630X","insurantCertiType": "I", "insurantName": "投保人王依晨","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "330200199703065264","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13404366529"}}
2017-03-06 18:42:02,465 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"2136458155\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"34100019920306630X\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王依晨\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"330200199703065264\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13404366529\"}}"}
2017-03-06 18:42:02,899 [pool-10-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030122\",\"insuredId\":\"2136458155\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:42:02,901 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:42:02,902 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:42:02,903 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:42:04,199 [pool-10-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:42:04,202 [pool-10-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030122==27030122
2017-03-06 18:42:04,203 [pool-10-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 18:43:57,008 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:43:57,008 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:43:57,009 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:43:57,010 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:43:57,011 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:43:57,011 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:43:57,013 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:43:57,015 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:43:57,017 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:43:57,019 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:43:57,021 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:43:57,023 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "6174133836","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "140000199203069721","insurantCertiType": "I", "insurantName": "投保人张英叡","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "41018319970306788X","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15804847658"}}
2017-03-06 18:43:57,024 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"6174133836\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"140000199203069721\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张英叡\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"41018319970306788X\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15804847658\"}}"}
2017-03-06 18:44:00,034 [pool-11-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {}
2017-03-06 18:44:00,035 [pool-11-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - msgCode==1
2017-03-06 18:44:00,035 [pool-11-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - msgInfo>>保单信息验证成功
2017-03-06 18:44:00,035 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:44:15,325 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:44:15,326 [pool-11-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - @ResponseDepend("TC002","policyId")==@ResponseCurrent("policyId")
2017-03-06 18:44:15,327 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 18:44:15,327 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:44:15,327 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:44:15,327 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:44:15,328 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:44:15,329 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:44:15,330 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:44:15,332 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:44:15,342 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:44:15,345 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:44:15,347 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:44:15,351 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:44:15,354 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "2494282332","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "430203199203062107","insurantCertiType": "I", "insurantName": "投保人王锦凡","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "511826199703069768","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13103963029"}}
2017-03-06 18:44:15,355 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"2494282332\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"430203199203062107\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人王锦凡\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"511826199703069768\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13103963029\"}}"}
2017-03-06 18:44:15,772 [pool-11-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030157\",\"insuredId\":\"2494282332\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:44:15,778 [pool-11-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:44:15,780 [pool-11-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:44:15,780 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:44:17,227 [pool-11-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:44:17,229 [pool-11-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030157==27030157
2017-03-06 18:44:17,230 [pool-11-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 18:44:48,588 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:44:48,590 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:44:48,592 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:44:48,597 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:44:48,597 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:44:48,599 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:44:48,603 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:44:48,605 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:44:48,607 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:44:48,608 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:44:48,610 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:44:48,611 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "5558336229","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "130921199203060101","insurantCertiType": "I", "insurantName": "投保人张幻天","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "650103199703068041","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "13208365835"}}
2017-03-06 18:44:48,612 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"5558336229\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"130921199203060101\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人张幻天\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"650103199703068041\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"13208365835\"}}"}
2017-03-06 18:44:49,028 [pool-12-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030158\",\"insuredId\":\"5558336229\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:44:49,033 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:44:49,035 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:44:49,035 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:44:49,038 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:44:49,040 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030158==27030158
2017-03-06 18:44:49,040 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
2017-03-06 18:44:49,041 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:22] - ---------当前用例执行开始，用例编号:TC002,接口类型: OpenAPI
2017-03-06 18:44:49,041 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:26] - 
表达式引擎解析前的参数: 
infoJson={"insuredId": "@RNum("10")","campaignId": "10002156338","packageId": "51252513","effectiveDate": "$ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "@RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")","insurantCertiType": "I", "insurantName": "投保人@RName()","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "$ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "$ParaReplace("15900986780","phone")"}}
2017-03-06 18:44:49,041 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("@RDate("yyyyMMdd","0/0/1")000000","effectiveDate")]开始解析...
2017-03-06 18:44:49,041 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace(@RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2"),"CertiNo")]开始解析...
2017-03-06 18:44:49,041 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:54] - 表达式: [ParaReplace("15900986780","phone")]开始解析...
2017-03-06 18:44:49,042 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RNum("10")]开始解析...
2017-03-06 18:44:49,043 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RDate("yyyyMMdd","0/0/1")]开始解析...
2017-03-06 18:44:49,044 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-25/0/0"),"2")]开始解析...
2017-03-06 18:44:49,046 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RName()]开始解析...
2017-03-06 18:44:49,050 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RIdWithBirthday(RDate("yyyyMMdd","-20/0/0"),"2")]开始解析...
2017-03-06 18:44:49,051 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [RPhone()]开始解析...
2017-03-06 18:44:49,052 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:37] - 
表达式引擎解析后的参数: 
infoJson={"insuredId": "7499225592","campaignId": "10002156338","packageId": "51252513","effectiveDate": "20170307000000","insurantList": [{ "amount": "1000000", "insurantGender": "", "insurantBirthday": "","insurantCertiNo": "150125199203062866","insurantCertiType": "I", "insurantName": "投保人莫雪羽","insurantPhone": "18317183693","insuredRelaToHolder": "3","premium": "219.00","isMedicare": "Y", "insurantUnit": "1"}],"policyHolder": { "holderGender": "","holderBirthday": "","holderCertiNo": "640300199703061069","holderCertiType": "I","holderName": "投保人王涵蓄","holderEmail": "yangxiaolinxx@zhongan.com","holderPhone": "15204101022"}}
2017-03-06 18:44:49,053 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:36] - Excel参数JSON: {"infoJson":"{\"insuredId\": \"7499225592\",\"campaignId\": \"10002156338\",\"packageId\": \"51252513\",\"effectiveDate\": \"20170307000000\",\"insurantList\": [{ \"amount\": \"1000000\", \"insurantGender\": \"\", \"insurantBirthday\": \"\",\"insurantCertiNo\": \"150125199203062866\",\"insurantCertiType\": \"I\", \"insurantName\": \"投保人莫雪羽\",\"insurantPhone\": \"18317183693\",\"insuredRelaToHolder\": \"3\",\"premium\": \"219.00\",\"isMedicare\": \"Y\", \"insurantUnit\": \"1\"}],\"policyHolder\": { \"holderGender\": \"\",\"holderBirthday\": \"\",\"holderCertiNo\": \"640300199703061069\",\"holderCertiType\": \"I\",\"holderName\": \"投保人王涵蓄\",\"holderEmail\": \"yangxiaolinxx@zhongan.com\",\"holderPhone\": \"15204101022\"}}"}
2017-03-06 18:44:49,466 [pool-12-thread-1] INFO  [com.za.qa.domain.core.RunClient] [RunClient.java:108] - bizcontent: {"param":"{\"msgCode\":\"1\",\"policyId\":\"27030159\",\"insuredId\":\"7499225592\",\"premium\":\"219.00\",\"packageName\":\"尊享e生医疗保险（100万版）\",\"msgInfo\":\"保单信息验证成功！\"}"}
2017-03-06 18:44:49,468 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 1==1
2017-03-06 18:44:49,470 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:573] - 保单信息验证成功！>>保单信息验证成功
2017-03-06 18:44:49,470 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseDepend("TC002","policyId")]开始解析...
2017-03-06 18:44:49,472 [pool-12-thread-1] INFO  [com.za.qa.domain.analyze.DataAnalyze] [DataAnalyze.java:181] - 表达式: [ResponseCurrent("policyId")]开始解析...
2017-03-06 18:44:49,473 [pool-12-thread-1] INFO  [com.za.qa.domain.verify.ResponseVerify] [ResponseVerify.java:540] - 27030159==27030159
2017-03-06 18:44:49,473 [pool-12-thread-1] INFO  [com.za.qa.utils.ClientUtils] [ClientUtils.java:27] - ---------当前用例执行完毕，用例编号:TC002---------
